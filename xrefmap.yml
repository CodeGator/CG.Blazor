### YamlMime:XRefMap
sorted: true
references:
- uid: CG.Blazor
  name: CG.Blazor
  href: api/CG.Blazor.html
  commentId: N:CG.Blazor
  fullName: CG.Blazor
  nameWithType: CG.Blazor
- uid: CG.Blazor.BlazorResources
  name: BlazorResources
  href: api/CG.Blazor.BlazorResources.html
  commentId: T:CG.Blazor.BlazorResources
  fullName: CG.Blazor.BlazorResources
  nameWithType: BlazorResources
- uid: CG.Blazor.BlazorResources.Clear
  name: Clear()
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_Clear
  commentId: M:CG.Blazor.BlazorResources.Clear
  fullName: CG.Blazor.BlazorResources.Clear()
  nameWithType: BlazorResources.Clear()
- uid: CG.Blazor.BlazorResources.Clear*
  name: Clear
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_Clear_
  commentId: Overload:CG.Blazor.BlazorResources.Clear
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.Clear
  nameWithType: BlazorResources.Clear
- uid: CG.Blazor.BlazorResources.RenderScriptTags
  name: RenderScriptTags()
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RenderScriptTags
  commentId: M:CG.Blazor.BlazorResources.RenderScriptTags
  fullName: CG.Blazor.BlazorResources.RenderScriptTags()
  nameWithType: BlazorResources.RenderScriptTags()
- uid: CG.Blazor.BlazorResources.RenderScriptTags*
  name: RenderScriptTags
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RenderScriptTags_
  commentId: Overload:CG.Blazor.BlazorResources.RenderScriptTags
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.RenderScriptTags
  nameWithType: BlazorResources.RenderScriptTags
- uid: CG.Blazor.BlazorResources.RenderStyleSheetLinks
  name: RenderStyleSheetLinks()
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RenderStyleSheetLinks
  commentId: M:CG.Blazor.BlazorResources.RenderStyleSheetLinks
  fullName: CG.Blazor.BlazorResources.RenderStyleSheetLinks()
  nameWithType: BlazorResources.RenderStyleSheetLinks()
- uid: CG.Blazor.BlazorResources.RenderStyleSheetLinks*
  name: RenderStyleSheetLinks
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RenderStyleSheetLinks_
  commentId: Overload:CG.Blazor.BlazorResources.RenderStyleSheetLinks
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.RenderStyleSheetLinks
  nameWithType: BlazorResources.RenderStyleSheetLinks
- uid: CG.Blazor.BlazorResources.RoutedAssemblies
  name: RoutedAssemblies
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RoutedAssemblies
  commentId: P:CG.Blazor.BlazorResources.RoutedAssemblies
  fullName: CG.Blazor.BlazorResources.RoutedAssemblies
  nameWithType: BlazorResources.RoutedAssemblies
- uid: CG.Blazor.BlazorResources.RoutedAssemblies*
  name: RoutedAssemblies
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RoutedAssemblies_
  commentId: Overload:CG.Blazor.BlazorResources.RoutedAssemblies
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.RoutedAssemblies
  nameWithType: BlazorResources.RoutedAssemblies
- uid: CG.Blazor.BlazorResources.Scripts
  name: Scripts
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_Scripts
  commentId: P:CG.Blazor.BlazorResources.Scripts
  fullName: CG.Blazor.BlazorResources.Scripts
  nameWithType: BlazorResources.Scripts
- uid: CG.Blazor.BlazorResources.Scripts*
  name: Scripts
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_Scripts_
  commentId: Overload:CG.Blazor.BlazorResources.Scripts
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.Scripts
  nameWithType: BlazorResources.Scripts
- uid: CG.Blazor.BlazorResources.StyleSheets
  name: StyleSheets
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_StyleSheets
  commentId: P:CG.Blazor.BlazorResources.StyleSheets
  fullName: CG.Blazor.BlazorResources.StyleSheets
  nameWithType: BlazorResources.StyleSheets
- uid: CG.Blazor.BlazorResources.StyleSheets*
  name: StyleSheets
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_StyleSheets_
  commentId: Overload:CG.Blazor.BlazorResources.StyleSheets
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.StyleSheets
  nameWithType: BlazorResources.StyleSheets
- uid: CG.Blazor.Commands
  name: CG.Blazor.Commands
  href: api/CG.Blazor.Commands.html
  commentId: N:CG.Blazor.Commands
  fullName: CG.Blazor.Commands
  nameWithType: CG.Blazor.Commands
- uid: CG.Blazor.Commands.CommandEventHandler
  name: CommandEventHandler
  href: api/CG.Blazor.Commands.CommandEventHandler.html
  commentId: T:CG.Blazor.Commands.CommandEventHandler
  fullName: CG.Blazor.Commands.CommandEventHandler
  nameWithType: CommandEventHandler
- uid: CG.Blazor.Commands.DelegateCommand
  name: DelegateCommand
  href: api/CG.Blazor.Commands.DelegateCommand.html
  commentId: T:CG.Blazor.Commands.DelegateCommand
  fullName: CG.Blazor.Commands.DelegateCommand
  nameWithType: DelegateCommand
- uid: CG.Blazor.Commands.DelegateCommand.#ctor(CG.Blazor.Commands.CommandEventHandler)
  name: DelegateCommand(CommandEventHandler)
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand__ctor_CG_Blazor_Commands_CommandEventHandler_
  commentId: M:CG.Blazor.Commands.DelegateCommand.#ctor(CG.Blazor.Commands.CommandEventHandler)
  fullName: CG.Blazor.Commands.DelegateCommand.DelegateCommand(CG.Blazor.Commands.CommandEventHandler)
  nameWithType: DelegateCommand.DelegateCommand(CommandEventHandler)
- uid: CG.Blazor.Commands.DelegateCommand.#ctor*
  name: DelegateCommand
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand__ctor_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand.#ctor
  isSpec: "True"
  fullName: CG.Blazor.Commands.DelegateCommand.DelegateCommand
  nameWithType: DelegateCommand.DelegateCommand
- uid: CG.Blazor.Commands.DelegateCommand.CanExecuteChanged
  name: CanExecuteChanged
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_CanExecuteChanged
  commentId: E:CG.Blazor.Commands.DelegateCommand.CanExecuteChanged
  fullName: CG.Blazor.Commands.DelegateCommand.CanExecuteChanged
  nameWithType: DelegateCommand.CanExecuteChanged
- uid: CG.Blazor.Commands.DelegateCommand.IsEnabled
  name: IsEnabled
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_IsEnabled
  commentId: P:CG.Blazor.Commands.DelegateCommand.IsEnabled
  fullName: CG.Blazor.Commands.DelegateCommand.IsEnabled
  nameWithType: DelegateCommand.IsEnabled
- uid: CG.Blazor.Commands.DelegateCommand.IsEnabled*
  name: IsEnabled
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_IsEnabled_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand.IsEnabled
  isSpec: "True"
  fullName: CG.Blazor.Commands.DelegateCommand.IsEnabled
  nameWithType: DelegateCommand.IsEnabled
- uid: CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#CanExecute(System.Object)
  name: ICommand.CanExecute(Object)
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_System_Windows_Input_ICommand_CanExecute_System_Object_
  commentId: M:CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#CanExecute(System.Object)
  name.vb: System.Windows.Input.ICommand.CanExecute(Object)
  fullName: CG.Blazor.Commands.DelegateCommand.System.Windows.Input.ICommand.CanExecute(System.Object)
  nameWithType: DelegateCommand.ICommand.CanExecute(Object)
  nameWithType.vb: DelegateCommand.System.Windows.Input.ICommand.CanExecute(Object)
- uid: CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#CanExecute*
  name: ICommand.CanExecute
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_System_Windows_Input_ICommand_CanExecute_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#CanExecute
  isSpec: "True"
  name.vb: System.Windows.Input.ICommand.CanExecute
  fullName: CG.Blazor.Commands.DelegateCommand.System.Windows.Input.ICommand.CanExecute
  nameWithType: DelegateCommand.ICommand.CanExecute
  nameWithType.vb: DelegateCommand.System.Windows.Input.ICommand.CanExecute
- uid: CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#Execute(System.Object)
  name: ICommand.Execute(Object)
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_System_Windows_Input_ICommand_Execute_System_Object_
  commentId: M:CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#Execute(System.Object)
  name.vb: System.Windows.Input.ICommand.Execute(Object)
  fullName: CG.Blazor.Commands.DelegateCommand.System.Windows.Input.ICommand.Execute(System.Object)
  nameWithType: DelegateCommand.ICommand.Execute(Object)
  nameWithType.vb: DelegateCommand.System.Windows.Input.ICommand.Execute(Object)
- uid: CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#Execute*
  name: ICommand.Execute
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_System_Windows_Input_ICommand_Execute_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#Execute
  isSpec: "True"
  name.vb: System.Windows.Input.ICommand.Execute
  fullName: CG.Blazor.Commands.DelegateCommand.System.Windows.Input.ICommand.Execute
  nameWithType: DelegateCommand.ICommand.Execute
  nameWithType.vb: DelegateCommand.System.Windows.Input.ICommand.Execute
- uid: CG.Blazor.IModule
  name: IModule
  href: api/CG.Blazor.IModule.html
  commentId: T:CG.Blazor.IModule
  fullName: CG.Blazor.IModule
  nameWithType: IModule
- uid: CG.Blazor.IModule.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name: Configure(IApplicationBuilder, IWebHostEnvironment)
  href: api/CG.Blazor.IModule.html#CG_Blazor_IModule_Configure_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  commentId: M:CG.Blazor.IModule.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  fullName: CG.Blazor.IModule.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  nameWithType: IModule.Configure(IApplicationBuilder, IWebHostEnvironment)
- uid: CG.Blazor.IModule.Configure*
  name: Configure
  href: api/CG.Blazor.IModule.html#CG_Blazor_IModule_Configure_
  commentId: Overload:CG.Blazor.IModule.Configure
  isSpec: "True"
  fullName: CG.Blazor.IModule.Configure
  nameWithType: IModule.Configure
- uid: CG.Blazor.IModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: ConfigureServices(IServiceCollection, IConfiguration)
  href: api/CG.Blazor.IModule.html#CG_Blazor_IModule_ConfigureServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:CG.Blazor.IModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: CG.Blazor.IModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: IModule.ConfigureServices(IServiceCollection, IConfiguration)
- uid: CG.Blazor.IModule.ConfigureServices*
  name: ConfigureServices
  href: api/CG.Blazor.IModule.html#CG_Blazor_IModule_ConfigureServices_
  commentId: Overload:CG.Blazor.IModule.ConfigureServices
  isSpec: "True"
  fullName: CG.Blazor.IModule.ConfigureServices
  nameWithType: IModule.ConfigureServices
- uid: CG.Blazor.Options
  name: CG.Blazor.Options
  href: api/CG.Blazor.Options.html
  commentId: N:CG.Blazor.Options
  fullName: CG.Blazor.Options
  nameWithType: CG.Blazor.Options
- uid: CG.Blazor.Options.ModuleOptions
  name: ModuleOptions
  href: api/CG.Blazor.Options.ModuleOptions.html
  commentId: T:CG.Blazor.Options.ModuleOptions
  fullName: CG.Blazor.Options.ModuleOptions
  nameWithType: ModuleOptions
- uid: CG.Blazor.Options.ModuleOptions.Assembly
  name: Assembly
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Assembly
  commentId: P:CG.Blazor.Options.ModuleOptions.Assembly
  fullName: CG.Blazor.Options.ModuleOptions.Assembly
  nameWithType: ModuleOptions.Assembly
- uid: CG.Blazor.Options.ModuleOptions.Assembly*
  name: Assembly
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Assembly_
  commentId: Overload:CG.Blazor.Options.ModuleOptions.Assembly
  isSpec: "True"
  fullName: CG.Blazor.Options.ModuleOptions.Assembly
  nameWithType: ModuleOptions.Assembly
- uid: CG.Blazor.Options.ModuleOptions.EntryPoint
  name: EntryPoint
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_EntryPoint
  commentId: P:CG.Blazor.Options.ModuleOptions.EntryPoint
  fullName: CG.Blazor.Options.ModuleOptions.EntryPoint
  nameWithType: ModuleOptions.EntryPoint
- uid: CG.Blazor.Options.ModuleOptions.EntryPoint*
  name: EntryPoint
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_EntryPoint_
  commentId: Overload:CG.Blazor.Options.ModuleOptions.EntryPoint
  isSpec: "True"
  fullName: CG.Blazor.Options.ModuleOptions.EntryPoint
  nameWithType: ModuleOptions.EntryPoint
- uid: CG.Blazor.Options.ModuleOptions.Routed
  name: Routed
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Routed
  commentId: P:CG.Blazor.Options.ModuleOptions.Routed
  fullName: CG.Blazor.Options.ModuleOptions.Routed
  nameWithType: ModuleOptions.Routed
- uid: CG.Blazor.Options.ModuleOptions.Routed*
  name: Routed
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Routed_
  commentId: Overload:CG.Blazor.Options.ModuleOptions.Routed
  isSpec: "True"
  fullName: CG.Blazor.Options.ModuleOptions.Routed
  nameWithType: ModuleOptions.Routed
- uid: CG.Blazor.Options.ModuleOptions.Scripts
  name: Scripts
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Scripts
  commentId: P:CG.Blazor.Options.ModuleOptions.Scripts
  fullName: CG.Blazor.Options.ModuleOptions.Scripts
  nameWithType: ModuleOptions.Scripts
- uid: CG.Blazor.Options.ModuleOptions.Scripts*
  name: Scripts
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Scripts_
  commentId: Overload:CG.Blazor.Options.ModuleOptions.Scripts
  isSpec: "True"
  fullName: CG.Blazor.Options.ModuleOptions.Scripts
  nameWithType: ModuleOptions.Scripts
- uid: CG.Blazor.Options.ModuleOptions.StyleSheets
  name: StyleSheets
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_StyleSheets
  commentId: P:CG.Blazor.Options.ModuleOptions.StyleSheets
  fullName: CG.Blazor.Options.ModuleOptions.StyleSheets
  nameWithType: ModuleOptions.StyleSheets
- uid: CG.Blazor.Options.ModuleOptions.StyleSheets*
  name: StyleSheets
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_StyleSheets_
  commentId: Overload:CG.Blazor.Options.ModuleOptions.StyleSheets
  isSpec: "True"
  fullName: CG.Blazor.Options.ModuleOptions.StyleSheets
  nameWithType: ModuleOptions.StyleSheets
- uid: CG.Blazor.Options.PluginOptions
  name: PluginOptions
  href: api/CG.Blazor.Options.PluginOptions.html
  commentId: T:CG.Blazor.Options.PluginOptions
  fullName: CG.Blazor.Options.PluginOptions
  nameWithType: PluginOptions
- uid: CG.Blazor.Options.PluginOptions.Modules
  name: Modules
  href: api/CG.Blazor.Options.PluginOptions.html#CG_Blazor_Options_PluginOptions_Modules
  commentId: P:CG.Blazor.Options.PluginOptions.Modules
  fullName: CG.Blazor.Options.PluginOptions.Modules
  nameWithType: PluginOptions.Modules
- uid: CG.Blazor.Options.PluginOptions.Modules*
  name: Modules
  href: api/CG.Blazor.Options.PluginOptions.html#CG_Blazor_Options_PluginOptions_Modules_
  commentId: Overload:CG.Blazor.Options.PluginOptions.Modules
  isSpec: "True"
  fullName: CG.Blazor.Options.PluginOptions.Modules
  nameWithType: PluginOptions.Modules
- uid: CG.Blazor.Options.PluginOptions.SectionKey
  name: SectionKey
  href: api/CG.Blazor.Options.PluginOptions.html#CG_Blazor_Options_PluginOptions_SectionKey
  commentId: F:CG.Blazor.Options.PluginOptions.SectionKey
  fullName: CG.Blazor.Options.PluginOptions.SectionKey
  nameWithType: PluginOptions.SectionKey
- uid: CG.Blazor.Plugins
  name: CG.Blazor.Plugins
  href: api/CG.Blazor.Plugins.html
  commentId: N:CG.Blazor.Plugins
  fullName: CG.Blazor.Plugins
  nameWithType: CG.Blazor.Plugins
- uid: CG.Blazor.Plugins.ModuleBase
  name: ModuleBase
  href: api/CG.Blazor.Plugins.ModuleBase.html
  commentId: T:CG.Blazor.Plugins.ModuleBase
  fullName: CG.Blazor.Plugins.ModuleBase
  nameWithType: ModuleBase
- uid: CG.Blazor.Plugins.ModuleBase.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name: Configure(IApplicationBuilder, IWebHostEnvironment)
  href: api/CG.Blazor.Plugins.ModuleBase.html#CG_Blazor_Plugins_ModuleBase_Configure_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  commentId: M:CG.Blazor.Plugins.ModuleBase.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  fullName: CG.Blazor.Plugins.ModuleBase.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  nameWithType: ModuleBase.Configure(IApplicationBuilder, IWebHostEnvironment)
- uid: CG.Blazor.Plugins.ModuleBase.Configure*
  name: Configure
  href: api/CG.Blazor.Plugins.ModuleBase.html#CG_Blazor_Plugins_ModuleBase_Configure_
  commentId: Overload:CG.Blazor.Plugins.ModuleBase.Configure
  isSpec: "True"
  fullName: CG.Blazor.Plugins.ModuleBase.Configure
  nameWithType: ModuleBase.Configure
- uid: CG.Blazor.Plugins.ModuleBase.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: ConfigureServices(IServiceCollection, IConfiguration)
  href: api/CG.Blazor.Plugins.ModuleBase.html#CG_Blazor_Plugins_ModuleBase_ConfigureServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:CG.Blazor.Plugins.ModuleBase.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: CG.Blazor.Plugins.ModuleBase.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ModuleBase.ConfigureServices(IServiceCollection, IConfiguration)
- uid: CG.Blazor.Plugins.ModuleBase.ConfigureServices*
  name: ConfigureServices
  href: api/CG.Blazor.Plugins.ModuleBase.html#CG_Blazor_Plugins_ModuleBase_ConfigureServices_
  commentId: Overload:CG.Blazor.Plugins.ModuleBase.ConfigureServices
  isSpec: "True"
  fullName: CG.Blazor.Plugins.ModuleBase.ConfigureServices
  nameWithType: ModuleBase.ConfigureServices
- uid: CG.Blazor.ViewModels
  name: CG.Blazor.ViewModels
  href: api/CG.Blazor.ViewModels.html
  commentId: N:CG.Blazor.ViewModels
  fullName: CG.Blazor.ViewModels
  nameWithType: CG.Blazor.ViewModels
- uid: CG.Blazor.ViewModels.IViewModel
  name: IViewModel
  href: api/CG.Blazor.ViewModels.IViewModel.html
  commentId: T:CG.Blazor.ViewModels.IViewModel
  fullName: CG.Blazor.ViewModels.IViewModel
  nameWithType: IViewModel
- uid: CG.Blazor.ViewModels.ViewModelBase
  name: ViewModelBase
  href: api/CG.Blazor.ViewModels.ViewModelBase.html
  commentId: T:CG.Blazor.ViewModels.ViewModelBase
  fullName: CG.Blazor.ViewModels.ViewModelBase
  nameWithType: ViewModelBase
- uid: CG.Blazor.ViewModels.ViewModelBase.#ctor
  name: ViewModelBase()
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase__ctor
  commentId: M:CG.Blazor.ViewModels.ViewModelBase.#ctor
  fullName: CG.Blazor.ViewModels.ViewModelBase.ViewModelBase()
  nameWithType: ViewModelBase.ViewModelBase()
- uid: CG.Blazor.ViewModels.ViewModelBase.#ctor(CG.Blazor.ViewModels.ViewModelBase)
  name: ViewModelBase(ViewModelBase)
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase__ctor_CG_Blazor_ViewModels_ViewModelBase_
  commentId: M:CG.Blazor.ViewModels.ViewModelBase.#ctor(CG.Blazor.ViewModels.ViewModelBase)
  fullName: CG.Blazor.ViewModels.ViewModelBase.ViewModelBase(CG.Blazor.ViewModels.ViewModelBase)
  nameWithType: ViewModelBase.ViewModelBase(ViewModelBase)
- uid: CG.Blazor.ViewModels.ViewModelBase.#ctor*
  name: ViewModelBase
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase__ctor_
  commentId: Overload:CG.Blazor.ViewModels.ViewModelBase.#ctor
  isSpec: "True"
  fullName: CG.Blazor.ViewModels.ViewModelBase.ViewModelBase
  nameWithType: ViewModelBase.ViewModelBase
- uid: CG.Blazor.ViewModels.ViewModelBase.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_Dispose_System_Boolean_
  commentId: M:CG.Blazor.ViewModels.ViewModelBase.Dispose(System.Boolean)
  fullName: CG.Blazor.ViewModels.ViewModelBase.Dispose(System.Boolean)
  nameWithType: ViewModelBase.Dispose(Boolean)
- uid: CG.Blazor.ViewModels.ViewModelBase.Dispose*
  name: Dispose
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_Dispose_
  commentId: Overload:CG.Blazor.ViewModels.ViewModelBase.Dispose
  isSpec: "True"
  fullName: CG.Blazor.ViewModels.ViewModelBase.Dispose
  nameWithType: ViewModelBase.Dispose
- uid: CG.Blazor.ViewModels.ViewModelBase.InnerViewModel
  name: InnerViewModel
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_InnerViewModel
  commentId: P:CG.Blazor.ViewModels.ViewModelBase.InnerViewModel
  fullName: CG.Blazor.ViewModels.ViewModelBase.InnerViewModel
  nameWithType: ViewModelBase.InnerViewModel
- uid: CG.Blazor.ViewModels.ViewModelBase.InnerViewModel*
  name: InnerViewModel
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_InnerViewModel_
  commentId: Overload:CG.Blazor.ViewModels.ViewModelBase.InnerViewModel
  isSpec: "True"
  fullName: CG.Blazor.ViewModels.ViewModelBase.InnerViewModel
  nameWithType: ViewModelBase.InnerViewModel
- uid: CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged(System.String)
  name: OnPropertyChanged(String)
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_OnPropertyChanged_System_String_
  commentId: M:CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged(System.String)
  fullName: CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged(System.String)
  nameWithType: ViewModelBase.OnPropertyChanged(String)
- uid: CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged*
  name: OnPropertyChanged
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_OnPropertyChanged_
  commentId: Overload:CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged
  isSpec: "True"
  fullName: CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged
  nameWithType: ViewModelBase.OnPropertyChanged
- uid: CG.Blazor.ViewModels.ViewModelBase.PropertyChanged
  name: PropertyChanged
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_PropertyChanged
  commentId: E:CG.Blazor.ViewModels.ViewModelBase.PropertyChanged
  fullName: CG.Blazor.ViewModels.ViewModelBase.PropertyChanged
  nameWithType: ViewModelBase.PropertyChanged
- uid: CG.Blazor.ViewModels.ViewModelBase.SetValue*
  name: SetValue
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_SetValue_
  commentId: Overload:CG.Blazor.ViewModels.ViewModelBase.SetValue
  isSpec: "True"
  fullName: CG.Blazor.ViewModels.ViewModelBase.SetValue
  nameWithType: ViewModelBase.SetValue
- uid: CG.Blazor.ViewModels.ViewModelBase.SetValue``1(``0@,``0,System.String)
  name: SetValue<T>(ref T, T, String)
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_SetValue__1___0____0_System_String_
  commentId: M:CG.Blazor.ViewModels.ViewModelBase.SetValue``1(``0@,``0,System.String)
  name.vb: SetValue(Of T)(ByRef T, T, String)
  fullName: CG.Blazor.ViewModels.ViewModelBase.SetValue<T>(ref T, T, System.String)
  fullName.vb: CG.Blazor.ViewModels.ViewModelBase.SetValue(Of T)(ByRef T, T, System.String)
  nameWithType: ViewModelBase.SetValue<T>(ref T, T, String)
  nameWithType.vb: ViewModelBase.SetValue(Of T)(ByRef T, T, String)
- uid: CG.Blazor.Views
  name: CG.Blazor.Views
  href: api/CG.Blazor.Views.html
  commentId: N:CG.Blazor.Views
  fullName: CG.Blazor.Views
  nameWithType: CG.Blazor.Views
- uid: CG.Blazor.Views.ViewBase`1
  name: ViewBase<T>
  href: api/CG.Blazor.Views.ViewBase-1.html
  commentId: T:CG.Blazor.Views.ViewBase`1
  name.vb: ViewBase(Of T)
  fullName: CG.Blazor.Views.ViewBase<T>
  fullName.vb: CG.Blazor.Views.ViewBase(Of T)
  nameWithType: ViewBase<T>
  nameWithType.vb: ViewBase(Of T)
- uid: CG.Blazor.Views.ViewBase`1.Dispose
  name: Dispose()
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_Dispose
  commentId: M:CG.Blazor.Views.ViewBase`1.Dispose
  fullName: CG.Blazor.Views.ViewBase<T>.Dispose()
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).Dispose()
  nameWithType: ViewBase<T>.Dispose()
  nameWithType.vb: ViewBase(Of T).Dispose()
- uid: CG.Blazor.Views.ViewBase`1.Dispose*
  name: Dispose
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_Dispose_
  commentId: Overload:CG.Blazor.Views.ViewBase`1.Dispose
  isSpec: "True"
  fullName: CG.Blazor.Views.ViewBase<T>.Dispose
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).Dispose
  nameWithType: ViewBase<T>.Dispose
  nameWithType.vb: ViewBase(Of T).Dispose
- uid: CG.Blazor.Views.ViewBase`1.OnInitializedAsync
  name: OnInitializedAsync()
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_OnInitializedAsync
  commentId: M:CG.Blazor.Views.ViewBase`1.OnInitializedAsync
  fullName: CG.Blazor.Views.ViewBase<T>.OnInitializedAsync()
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).OnInitializedAsync()
  nameWithType: ViewBase<T>.OnInitializedAsync()
  nameWithType.vb: ViewBase(Of T).OnInitializedAsync()
- uid: CG.Blazor.Views.ViewBase`1.OnInitializedAsync*
  name: OnInitializedAsync
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_OnInitializedAsync_
  commentId: Overload:CG.Blazor.Views.ViewBase`1.OnInitializedAsync
  isSpec: "True"
  fullName: CG.Blazor.Views.ViewBase<T>.OnInitializedAsync
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).OnInitializedAsync
  nameWithType: ViewBase<T>.OnInitializedAsync
  nameWithType.vb: ViewBase(Of T).OnInitializedAsync
- uid: CG.Blazor.Views.ViewBase`1.ViewModel
  name: ViewModel
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_ViewModel
  commentId: P:CG.Blazor.Views.ViewBase`1.ViewModel
  fullName: CG.Blazor.Views.ViewBase<T>.ViewModel
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).ViewModel
  nameWithType: ViewBase<T>.ViewModel
  nameWithType.vb: ViewBase(Of T).ViewModel
- uid: CG.Blazor.Views.ViewBase`1.ViewModel*
  name: ViewModel
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_ViewModel_
  commentId: Overload:CG.Blazor.Views.ViewBase`1.ViewModel
  isSpec: "True"
  fullName: CG.Blazor.Views.ViewBase<T>.ViewModel
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).ViewModel
  nameWithType: ViewBase<T>.ViewModel
  nameWithType.vb: ViewBase(Of T).ViewModel
- uid: Microsoft.AspNetCore.Builder
  name: Microsoft.AspNetCore.Builder
  href: api/Microsoft.AspNetCore.Builder.html
  commentId: N:Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  name: ApplicationBuilderExtensions
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html
  commentId: T:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  nameWithType: ApplicationBuilderExtensions
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name: UsePlugins(IApplicationBuilder, IWebHostEnvironment)
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html#Microsoft_AspNetCore_Builder_ApplicationBuilderExtensions_UsePlugins_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  commentId: M:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  nameWithType: ApplicationBuilderExtensions.UsePlugins(IApplicationBuilder, IWebHostEnvironment)
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins*
  name: UsePlugins
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html#Microsoft_AspNetCore_Builder_ApplicationBuilderExtensions_UsePlugins_
  commentId: Overload:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins
  isSpec: "True"
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins
  nameWithType: ApplicationBuilderExtensions.UsePlugins
- uid: Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  href: api/Microsoft.Extensions.DependencyInjection.html
  commentId: N:Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html
  commentId: T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddPlugins(IServiceCollection, IConfiguration)
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddPlugins_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ServiceCollectionExtensions.AddPlugins(IServiceCollection, IConfiguration)
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins*
  name: AddPlugins
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddPlugins_
  commentId: Overload:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins
  isSpec: "True"
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins
  nameWithType: ServiceCollectionExtensions.AddPlugins
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String)
  name: AddViewModels(IServiceCollection, String, String)
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddViewModels_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_String_System_String_
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.String)
  nameWithType: ServiceCollectionExtensions.AddViewModels(IServiceCollection, String, String)
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels*
  name: AddViewModels
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddViewModels_
  commentId: Overload:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels
  isSpec: "True"
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels
  nameWithType: ServiceCollectionExtensions.AddViewModels

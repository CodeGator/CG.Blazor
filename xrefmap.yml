### YamlMime:XRefMap
sorted: true
references:
- uid: CG.Blazor.Services
  name: CG.Blazor.Services
  href: api/CG.Blazor.Services.html
  commentId: N:CG.Blazor.Services
  fullName: CG.Blazor.Services
  nameWithType: CG.Blazor.Services
- uid: CG.Blazor.Services.BackgroundService
  name: BackgroundService
  href: api/CG.Blazor.Services.BackgroundService.html
  commentId: T:CG.Blazor.Services.BackgroundService
  fullName: CG.Blazor.Services.BackgroundService
  nameWithType: BackgroundService
- uid: CG.Blazor.Services.BackgroundService._executingTask
  name: _executingTask
  href: api/CG.Blazor.Services.BackgroundService.html#CG_Blazor_Services_BackgroundService__executingTask
  commentId: F:CG.Blazor.Services.BackgroundService._executingTask
  fullName: CG.Blazor.Services.BackgroundService._executingTask
  nameWithType: BackgroundService._executingTask
- uid: CG.Blazor.Services.BackgroundService._stoppingCts
  name: _stoppingCts
  href: api/CG.Blazor.Services.BackgroundService.html#CG_Blazor_Services_BackgroundService__stoppingCts
  commentId: F:CG.Blazor.Services.BackgroundService._stoppingCts
  fullName: CG.Blazor.Services.BackgroundService._stoppingCts
  nameWithType: BackgroundService._stoppingCts
- uid: CG.Blazor.Services.BackgroundService.Dispose
  name: Dispose()
  href: api/CG.Blazor.Services.BackgroundService.html#CG_Blazor_Services_BackgroundService_Dispose
  commentId: M:CG.Blazor.Services.BackgroundService.Dispose
  fullName: CG.Blazor.Services.BackgroundService.Dispose()
  nameWithType: BackgroundService.Dispose()
- uid: CG.Blazor.Services.BackgroundService.Dispose*
  name: Dispose
  href: api/CG.Blazor.Services.BackgroundService.html#CG_Blazor_Services_BackgroundService_Dispose_
  commentId: Overload:CG.Blazor.Services.BackgroundService.Dispose
  isSpec: "True"
  fullName: CG.Blazor.Services.BackgroundService.Dispose
  nameWithType: BackgroundService.Dispose
- uid: CG.Blazor.Services.BackgroundService.ExecuteAsync(CancellationToken)
  name: ExecuteAsync(CancellationToken)
  href: api/CG.Blazor.Services.BackgroundService.html#CG_Blazor_Services_BackgroundService_ExecuteAsync_CancellationToken_
  commentId: M:CG.Blazor.Services.BackgroundService.ExecuteAsync(CancellationToken)
  fullName: CG.Blazor.Services.BackgroundService.ExecuteAsync(CancellationToken)
  nameWithType: BackgroundService.ExecuteAsync(CancellationToken)
- uid: CG.Blazor.Services.BackgroundService.ExecuteAsync*
  name: ExecuteAsync
  href: api/CG.Blazor.Services.BackgroundService.html#CG_Blazor_Services_BackgroundService_ExecuteAsync_
  commentId: Overload:CG.Blazor.Services.BackgroundService.ExecuteAsync
  isSpec: "True"
  fullName: CG.Blazor.Services.BackgroundService.ExecuteAsync
  nameWithType: BackgroundService.ExecuteAsync
- uid: CG.Blazor.Services.BackgroundService.StartAsync(CancellationToken)
  name: StartAsync(CancellationToken)
  href: api/CG.Blazor.Services.BackgroundService.html#CG_Blazor_Services_BackgroundService_StartAsync_CancellationToken_
  commentId: M:CG.Blazor.Services.BackgroundService.StartAsync(CancellationToken)
  fullName: CG.Blazor.Services.BackgroundService.StartAsync(CancellationToken)
  nameWithType: BackgroundService.StartAsync(CancellationToken)
- uid: CG.Blazor.Services.BackgroundService.StartAsync*
  name: StartAsync
  href: api/CG.Blazor.Services.BackgroundService.html#CG_Blazor_Services_BackgroundService_StartAsync_
  commentId: Overload:CG.Blazor.Services.BackgroundService.StartAsync
  isSpec: "True"
  fullName: CG.Blazor.Services.BackgroundService.StartAsync
  nameWithType: BackgroundService.StartAsync
- uid: CG.Blazor.Services.BackgroundService.StopAsync(CancellationToken)
  name: StopAsync(CancellationToken)
  href: api/CG.Blazor.Services.BackgroundService.html#CG_Blazor_Services_BackgroundService_StopAsync_CancellationToken_
  commentId: M:CG.Blazor.Services.BackgroundService.StopAsync(CancellationToken)
  fullName: CG.Blazor.Services.BackgroundService.StopAsync(CancellationToken)
  nameWithType: BackgroundService.StopAsync(CancellationToken)
- uid: CG.Blazor.Services.BackgroundService.StopAsync*
  name: StopAsync
  href: api/CG.Blazor.Services.BackgroundService.html#CG_Blazor_Services_BackgroundService_StopAsync_
  commentId: Overload:CG.Blazor.Services.BackgroundService.StopAsync
  isSpec: "True"
  fullName: CG.Blazor.Services.BackgroundService.StopAsync
  nameWithType: BackgroundService.StopAsync

### YamlMime:XRefMap
sorted: true
references:
- uid: CG.Blazor
  name: CG.Blazor
  href: api/CG.Blazor.html
  commentId: N:CG.Blazor
  fullName: CG.Blazor
  nameWithType: CG.Blazor
- uid: CG.Blazor.BlazorResources
  name: BlazorResources
  href: api/CG.Blazor.BlazorResources.html
  commentId: T:CG.Blazor.BlazorResources
  fullName: CG.Blazor.BlazorResources
  nameWithType: BlazorResources
- uid: CG.Blazor.BlazorResources.Clear
  name: Clear()
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_Clear
  commentId: M:CG.Blazor.BlazorResources.Clear
  fullName: CG.Blazor.BlazorResources.Clear()
  nameWithType: BlazorResources.Clear()
- uid: CG.Blazor.BlazorResources.Clear*
  name: Clear
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_Clear_
  commentId: Overload:CG.Blazor.BlazorResources.Clear
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.Clear
  nameWithType: BlazorResources.Clear
- uid: CG.Blazor.BlazorResources.ExternalResources
  name: ExternalResources
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_ExternalResources
  commentId: P:CG.Blazor.BlazorResources.ExternalResources
  fullName: CG.Blazor.BlazorResources.ExternalResources
  nameWithType: BlazorResources.ExternalResources
- uid: CG.Blazor.BlazorResources.ExternalResources*
  name: ExternalResources
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_ExternalResources_
  commentId: Overload:CG.Blazor.BlazorResources.ExternalResources
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.ExternalResources
  nameWithType: BlazorResources.ExternalResources
- uid: CG.Blazor.BlazorResources.RenderExternalResources
  name: RenderExternalResources()
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RenderExternalResources
  commentId: M:CG.Blazor.BlazorResources.RenderExternalResources
  fullName: CG.Blazor.BlazorResources.RenderExternalResources()
  nameWithType: BlazorResources.RenderExternalResources()
- uid: CG.Blazor.BlazorResources.RenderExternalResources*
  name: RenderExternalResources
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RenderExternalResources_
  commentId: Overload:CG.Blazor.BlazorResources.RenderExternalResources
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.RenderExternalResources
  nameWithType: BlazorResources.RenderExternalResources
- uid: CG.Blazor.BlazorResources.RenderScriptTags
  name: RenderScriptTags()
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RenderScriptTags
  commentId: M:CG.Blazor.BlazorResources.RenderScriptTags
  fullName: CG.Blazor.BlazorResources.RenderScriptTags()
  nameWithType: BlazorResources.RenderScriptTags()
- uid: CG.Blazor.BlazorResources.RenderScriptTags*
  name: RenderScriptTags
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RenderScriptTags_
  commentId: Overload:CG.Blazor.BlazorResources.RenderScriptTags
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.RenderScriptTags
  nameWithType: BlazorResources.RenderScriptTags
- uid: CG.Blazor.BlazorResources.RenderStyleSheetLinks
  name: RenderStyleSheetLinks()
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RenderStyleSheetLinks
  commentId: M:CG.Blazor.BlazorResources.RenderStyleSheetLinks
  fullName: CG.Blazor.BlazorResources.RenderStyleSheetLinks()
  nameWithType: BlazorResources.RenderStyleSheetLinks()
- uid: CG.Blazor.BlazorResources.RenderStyleSheetLinks*
  name: RenderStyleSheetLinks
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RenderStyleSheetLinks_
  commentId: Overload:CG.Blazor.BlazorResources.RenderStyleSheetLinks
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.RenderStyleSheetLinks
  nameWithType: BlazorResources.RenderStyleSheetLinks
- uid: CG.Blazor.BlazorResources.RoutedAssemblies
  name: RoutedAssemblies
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RoutedAssemblies
  commentId: P:CG.Blazor.BlazorResources.RoutedAssemblies
  fullName: CG.Blazor.BlazorResources.RoutedAssemblies
  nameWithType: BlazorResources.RoutedAssemblies
- uid: CG.Blazor.BlazorResources.RoutedAssemblies*
  name: RoutedAssemblies
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_RoutedAssemblies_
  commentId: Overload:CG.Blazor.BlazorResources.RoutedAssemblies
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.RoutedAssemblies
  nameWithType: BlazorResources.RoutedAssemblies
- uid: CG.Blazor.BlazorResources.Scripts
  name: Scripts
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_Scripts
  commentId: P:CG.Blazor.BlazorResources.Scripts
  fullName: CG.Blazor.BlazorResources.Scripts
  nameWithType: BlazorResources.Scripts
- uid: CG.Blazor.BlazorResources.Scripts*
  name: Scripts
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_Scripts_
  commentId: Overload:CG.Blazor.BlazorResources.Scripts
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.Scripts
  nameWithType: BlazorResources.Scripts
- uid: CG.Blazor.BlazorResources.StyleSheets
  name: StyleSheets
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_StyleSheets
  commentId: P:CG.Blazor.BlazorResources.StyleSheets
  fullName: CG.Blazor.BlazorResources.StyleSheets
  nameWithType: BlazorResources.StyleSheets
- uid: CG.Blazor.BlazorResources.StyleSheets*
  name: StyleSheets
  href: api/CG.Blazor.BlazorResources.html#CG_Blazor_BlazorResources_StyleSheets_
  commentId: Overload:CG.Blazor.BlazorResources.StyleSheets
  isSpec: "True"
  fullName: CG.Blazor.BlazorResources.StyleSheets
  nameWithType: BlazorResources.StyleSheets
- uid: CG.Blazor.Commands
  name: CG.Blazor.Commands
  href: api/CG.Blazor.Commands.html
  commentId: N:CG.Blazor.Commands
  fullName: CG.Blazor.Commands
  nameWithType: CG.Blazor.Commands
- uid: CG.Blazor.Commands.CommandEventHandler
  name: CommandEventHandler
  href: api/CG.Blazor.Commands.CommandEventHandler.html
  commentId: T:CG.Blazor.Commands.CommandEventHandler
  fullName: CG.Blazor.Commands.CommandEventHandler
  nameWithType: CommandEventHandler
- uid: CG.Blazor.Commands.CommandEventHandler`1
  name: CommandEventHandler<T>
  href: api/CG.Blazor.Commands.CommandEventHandler-1.html
  commentId: T:CG.Blazor.Commands.CommandEventHandler`1
  name.vb: CommandEventHandler(Of T)
  fullName: CG.Blazor.Commands.CommandEventHandler<T>
  fullName.vb: CG.Blazor.Commands.CommandEventHandler(Of T)
  nameWithType: CommandEventHandler<T>
  nameWithType.vb: CommandEventHandler(Of T)
- uid: CG.Blazor.Commands.DelegateCommand
  name: DelegateCommand
  href: api/CG.Blazor.Commands.DelegateCommand.html
  commentId: T:CG.Blazor.Commands.DelegateCommand
  fullName: CG.Blazor.Commands.DelegateCommand
  nameWithType: DelegateCommand
- uid: CG.Blazor.Commands.DelegateCommand.#ctor(CG.Blazor.Commands.CommandEventHandler)
  name: DelegateCommand(CommandEventHandler)
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand__ctor_CG_Blazor_Commands_CommandEventHandler_
  commentId: M:CG.Blazor.Commands.DelegateCommand.#ctor(CG.Blazor.Commands.CommandEventHandler)
  fullName: CG.Blazor.Commands.DelegateCommand.DelegateCommand(CG.Blazor.Commands.CommandEventHandler)
  nameWithType: DelegateCommand.DelegateCommand(CommandEventHandler)
- uid: CG.Blazor.Commands.DelegateCommand.#ctor*
  name: DelegateCommand
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand__ctor_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand.#ctor
  isSpec: "True"
  fullName: CG.Blazor.Commands.DelegateCommand.DelegateCommand
  nameWithType: DelegateCommand.DelegateCommand
- uid: CG.Blazor.Commands.DelegateCommand.CanExecuteChanged
  name: CanExecuteChanged
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_CanExecuteChanged
  commentId: E:CG.Blazor.Commands.DelegateCommand.CanExecuteChanged
  fullName: CG.Blazor.Commands.DelegateCommand.CanExecuteChanged
  nameWithType: DelegateCommand.CanExecuteChanged
- uid: CG.Blazor.Commands.DelegateCommand.IsEnabled
  name: IsEnabled
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_IsEnabled
  commentId: P:CG.Blazor.Commands.DelegateCommand.IsEnabled
  fullName: CG.Blazor.Commands.DelegateCommand.IsEnabled
  nameWithType: DelegateCommand.IsEnabled
- uid: CG.Blazor.Commands.DelegateCommand.IsEnabled*
  name: IsEnabled
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_IsEnabled_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand.IsEnabled
  isSpec: "True"
  fullName: CG.Blazor.Commands.DelegateCommand.IsEnabled
  nameWithType: DelegateCommand.IsEnabled
- uid: CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#CanExecute(System.Object)
  name: ICommand.CanExecute(Object)
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_System_Windows_Input_ICommand_CanExecute_System_Object_
  commentId: M:CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#CanExecute(System.Object)
  name.vb: System.Windows.Input.ICommand.CanExecute(Object)
  fullName: CG.Blazor.Commands.DelegateCommand.System.Windows.Input.ICommand.CanExecute(System.Object)
  nameWithType: DelegateCommand.ICommand.CanExecute(Object)
  nameWithType.vb: DelegateCommand.System.Windows.Input.ICommand.CanExecute(Object)
- uid: CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#CanExecute*
  name: ICommand.CanExecute
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_System_Windows_Input_ICommand_CanExecute_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#CanExecute
  isSpec: "True"
  name.vb: System.Windows.Input.ICommand.CanExecute
  fullName: CG.Blazor.Commands.DelegateCommand.System.Windows.Input.ICommand.CanExecute
  nameWithType: DelegateCommand.ICommand.CanExecute
  nameWithType.vb: DelegateCommand.System.Windows.Input.ICommand.CanExecute
- uid: CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#Execute(System.Object)
  name: ICommand.Execute(Object)
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_System_Windows_Input_ICommand_Execute_System_Object_
  commentId: M:CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#Execute(System.Object)
  name.vb: System.Windows.Input.ICommand.Execute(Object)
  fullName: CG.Blazor.Commands.DelegateCommand.System.Windows.Input.ICommand.Execute(System.Object)
  nameWithType: DelegateCommand.ICommand.Execute(Object)
  nameWithType.vb: DelegateCommand.System.Windows.Input.ICommand.Execute(Object)
- uid: CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#Execute*
  name: ICommand.Execute
  href: api/CG.Blazor.Commands.DelegateCommand.html#CG_Blazor_Commands_DelegateCommand_System_Windows_Input_ICommand_Execute_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand.System#Windows#Input#ICommand#Execute
  isSpec: "True"
  name.vb: System.Windows.Input.ICommand.Execute
  fullName: CG.Blazor.Commands.DelegateCommand.System.Windows.Input.ICommand.Execute
  nameWithType: DelegateCommand.ICommand.Execute
  nameWithType.vb: DelegateCommand.System.Windows.Input.ICommand.Execute
- uid: CG.Blazor.Commands.DelegateCommand`1
  name: DelegateCommand<T>
  href: api/CG.Blazor.Commands.DelegateCommand-1.html
  commentId: T:CG.Blazor.Commands.DelegateCommand`1
  name.vb: DelegateCommand(Of T)
  fullName: CG.Blazor.Commands.DelegateCommand<T>
  fullName.vb: CG.Blazor.Commands.DelegateCommand(Of T)
  nameWithType: DelegateCommand<T>
  nameWithType.vb: DelegateCommand(Of T)
- uid: CG.Blazor.Commands.DelegateCommand`1.#ctor(CG.Blazor.Commands.CommandEventHandler{`0})
  name: DelegateCommand(CommandEventHandler<T>)
  href: api/CG.Blazor.Commands.DelegateCommand-1.html#CG_Blazor_Commands_DelegateCommand_1__ctor_CG_Blazor_Commands_CommandEventHandler__0__
  commentId: M:CG.Blazor.Commands.DelegateCommand`1.#ctor(CG.Blazor.Commands.CommandEventHandler{`0})
  name.vb: DelegateCommand(CommandEventHandler(Of T))
  fullName: CG.Blazor.Commands.DelegateCommand<T>.DelegateCommand(CG.Blazor.Commands.CommandEventHandler<T>)
  fullName.vb: CG.Blazor.Commands.DelegateCommand(Of T).DelegateCommand(CG.Blazor.Commands.CommandEventHandler(Of T))
  nameWithType: DelegateCommand<T>.DelegateCommand(CommandEventHandler<T>)
  nameWithType.vb: DelegateCommand(Of T).DelegateCommand(CommandEventHandler(Of T))
- uid: CG.Blazor.Commands.DelegateCommand`1.#ctor*
  name: DelegateCommand
  href: api/CG.Blazor.Commands.DelegateCommand-1.html#CG_Blazor_Commands_DelegateCommand_1__ctor_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand`1.#ctor
  isSpec: "True"
  fullName: CG.Blazor.Commands.DelegateCommand<T>.DelegateCommand
  fullName.vb: CG.Blazor.Commands.DelegateCommand(Of T).DelegateCommand
  nameWithType: DelegateCommand<T>.DelegateCommand
  nameWithType.vb: DelegateCommand(Of T).DelegateCommand
- uid: CG.Blazor.Commands.DelegateCommand`1.CanExecuteChanged
  name: CanExecuteChanged
  href: api/CG.Blazor.Commands.DelegateCommand-1.html#CG_Blazor_Commands_DelegateCommand_1_CanExecuteChanged
  commentId: E:CG.Blazor.Commands.DelegateCommand`1.CanExecuteChanged
  fullName: CG.Blazor.Commands.DelegateCommand<T>.CanExecuteChanged
  fullName.vb: CG.Blazor.Commands.DelegateCommand(Of T).CanExecuteChanged
  nameWithType: DelegateCommand<T>.CanExecuteChanged
  nameWithType.vb: DelegateCommand(Of T).CanExecuteChanged
- uid: CG.Blazor.Commands.DelegateCommand`1.IsEnabled
  name: IsEnabled
  href: api/CG.Blazor.Commands.DelegateCommand-1.html#CG_Blazor_Commands_DelegateCommand_1_IsEnabled
  commentId: P:CG.Blazor.Commands.DelegateCommand`1.IsEnabled
  fullName: CG.Blazor.Commands.DelegateCommand<T>.IsEnabled
  fullName.vb: CG.Blazor.Commands.DelegateCommand(Of T).IsEnabled
  nameWithType: DelegateCommand<T>.IsEnabled
  nameWithType.vb: DelegateCommand(Of T).IsEnabled
- uid: CG.Blazor.Commands.DelegateCommand`1.IsEnabled*
  name: IsEnabled
  href: api/CG.Blazor.Commands.DelegateCommand-1.html#CG_Blazor_Commands_DelegateCommand_1_IsEnabled_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand`1.IsEnabled
  isSpec: "True"
  fullName: CG.Blazor.Commands.DelegateCommand<T>.IsEnabled
  fullName.vb: CG.Blazor.Commands.DelegateCommand(Of T).IsEnabled
  nameWithType: DelegateCommand<T>.IsEnabled
  nameWithType.vb: DelegateCommand(Of T).IsEnabled
- uid: CG.Blazor.Commands.DelegateCommand`1.System#Windows#Input#ICommand#CanExecute(System.Object)
  name: ICommand.CanExecute(Object)
  href: api/CG.Blazor.Commands.DelegateCommand-1.html#CG_Blazor_Commands_DelegateCommand_1_System_Windows_Input_ICommand_CanExecute_System_Object_
  commentId: M:CG.Blazor.Commands.DelegateCommand`1.System#Windows#Input#ICommand#CanExecute(System.Object)
  name.vb: System.Windows.Input.ICommand.CanExecute(Object)
  fullName: CG.Blazor.Commands.DelegateCommand<T>.System.Windows.Input.ICommand.CanExecute(System.Object)
  fullName.vb: CG.Blazor.Commands.DelegateCommand(Of T).System.Windows.Input.ICommand.CanExecute(System.Object)
  nameWithType: DelegateCommand<T>.ICommand.CanExecute(Object)
  nameWithType.vb: DelegateCommand(Of T).System.Windows.Input.ICommand.CanExecute(Object)
- uid: CG.Blazor.Commands.DelegateCommand`1.System#Windows#Input#ICommand#CanExecute*
  name: ICommand.CanExecute
  href: api/CG.Blazor.Commands.DelegateCommand-1.html#CG_Blazor_Commands_DelegateCommand_1_System_Windows_Input_ICommand_CanExecute_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand`1.System#Windows#Input#ICommand#CanExecute
  isSpec: "True"
  name.vb: System.Windows.Input.ICommand.CanExecute
  fullName: CG.Blazor.Commands.DelegateCommand<T>.System.Windows.Input.ICommand.CanExecute
  fullName.vb: CG.Blazor.Commands.DelegateCommand(Of T).System.Windows.Input.ICommand.CanExecute
  nameWithType: DelegateCommand<T>.ICommand.CanExecute
  nameWithType.vb: DelegateCommand(Of T).System.Windows.Input.ICommand.CanExecute
- uid: CG.Blazor.Commands.DelegateCommand`1.System#Windows#Input#ICommand#Execute(System.Object)
  name: ICommand.Execute(Object)
  href: api/CG.Blazor.Commands.DelegateCommand-1.html#CG_Blazor_Commands_DelegateCommand_1_System_Windows_Input_ICommand_Execute_System_Object_
  commentId: M:CG.Blazor.Commands.DelegateCommand`1.System#Windows#Input#ICommand#Execute(System.Object)
  name.vb: System.Windows.Input.ICommand.Execute(Object)
  fullName: CG.Blazor.Commands.DelegateCommand<T>.System.Windows.Input.ICommand.Execute(System.Object)
  fullName.vb: CG.Blazor.Commands.DelegateCommand(Of T).System.Windows.Input.ICommand.Execute(System.Object)
  nameWithType: DelegateCommand<T>.ICommand.Execute(Object)
  nameWithType.vb: DelegateCommand(Of T).System.Windows.Input.ICommand.Execute(Object)
- uid: CG.Blazor.Commands.DelegateCommand`1.System#Windows#Input#ICommand#Execute*
  name: ICommand.Execute
  href: api/CG.Blazor.Commands.DelegateCommand-1.html#CG_Blazor_Commands_DelegateCommand_1_System_Windows_Input_ICommand_Execute_
  commentId: Overload:CG.Blazor.Commands.DelegateCommand`1.System#Windows#Input#ICommand#Execute
  isSpec: "True"
  name.vb: System.Windows.Input.ICommand.Execute
  fullName: CG.Blazor.Commands.DelegateCommand<T>.System.Windows.Input.ICommand.Execute
  fullName.vb: CG.Blazor.Commands.DelegateCommand(Of T).System.Windows.Input.ICommand.Execute
  nameWithType: DelegateCommand<T>.ICommand.Execute
  nameWithType.vb: DelegateCommand(Of T).System.Windows.Input.ICommand.Execute
- uid: CG.Blazor.Events
  name: CG.Blazor.Events
  href: api/CG.Blazor.Events.html
  commentId: N:CG.Blazor.Events
  fullName: CG.Blazor.Events
  nameWithType: CG.Blazor.Events
- uid: CG.Blazor.Events.EventBase
  name: EventBase
  href: api/CG.Blazor.Events.EventBase.html
  commentId: T:CG.Blazor.Events.EventBase
  fullName: CG.Blazor.Events.EventBase
  nameWithType: EventBase
- uid: CG.Blazor.Events.EventBase.#ctor
  name: EventBase()
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase__ctor
  commentId: M:CG.Blazor.Events.EventBase.#ctor
  fullName: CG.Blazor.Events.EventBase.EventBase()
  nameWithType: EventBase.EventBase()
- uid: CG.Blazor.Events.EventBase.#ctor*
  name: EventBase
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase__ctor_
  commentId: Overload:CG.Blazor.Events.EventBase.#ctor
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase.EventBase
  nameWithType: EventBase.EventBase
- uid: CG.Blazor.Events.EventBase.Contains(CG.Blazor.Events.ISubscriber)
  name: Contains(ISubscriber)
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Contains_CG_Blazor_Events_ISubscriber_
  commentId: M:CG.Blazor.Events.EventBase.Contains(CG.Blazor.Events.ISubscriber)
  fullName: CG.Blazor.Events.EventBase.Contains(CG.Blazor.Events.ISubscriber)
  nameWithType: EventBase.Contains(ISubscriber)
- uid: CG.Blazor.Events.EventBase.Contains(System.Action)
  name: Contains(Action)
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Contains_System_Action_
  commentId: M:CG.Blazor.Events.EventBase.Contains(System.Action)
  fullName: CG.Blazor.Events.EventBase.Contains(System.Action)
  nameWithType: EventBase.Contains(Action)
- uid: CG.Blazor.Events.EventBase.Contains*
  name: Contains
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Contains_
  commentId: Overload:CG.Blazor.Events.EventBase.Contains
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase.Contains
  nameWithType: EventBase.Contains
- uid: CG.Blazor.Events.EventBase.InternalPublish(System.Object[])
  name: InternalPublish(Object[])
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_InternalPublish_System_Object___
  commentId: M:CG.Blazor.Events.EventBase.InternalPublish(System.Object[])
  name.vb: InternalPublish(Object())
  fullName: CG.Blazor.Events.EventBase.InternalPublish(System.Object[])
  fullName.vb: CG.Blazor.Events.EventBase.InternalPublish(System.Object())
  nameWithType: EventBase.InternalPublish(Object[])
  nameWithType.vb: EventBase.InternalPublish(Object())
- uid: CG.Blazor.Events.EventBase.InternalPublish*
  name: InternalPublish
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_InternalPublish_
  commentId: Overload:CG.Blazor.Events.EventBase.InternalPublish
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase.InternalPublish
  nameWithType: EventBase.InternalPublish
- uid: CG.Blazor.Events.EventBase.InternalSubscribe(CG.Blazor.Events.ISubscription)
  name: InternalSubscribe(ISubscription)
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_InternalSubscribe_CG_Blazor_Events_ISubscription_
  commentId: M:CG.Blazor.Events.EventBase.InternalSubscribe(CG.Blazor.Events.ISubscription)
  fullName: CG.Blazor.Events.EventBase.InternalSubscribe(CG.Blazor.Events.ISubscription)
  nameWithType: EventBase.InternalSubscribe(ISubscription)
- uid: CG.Blazor.Events.EventBase.InternalSubscribe*
  name: InternalSubscribe
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_InternalSubscribe_
  commentId: Overload:CG.Blazor.Events.EventBase.InternalSubscribe
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase.InternalSubscribe
  nameWithType: EventBase.InternalSubscribe
- uid: CG.Blazor.Events.EventBase.Publish
  name: Publish()
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Publish
  commentId: M:CG.Blazor.Events.EventBase.Publish
  fullName: CG.Blazor.Events.EventBase.Publish()
  nameWithType: EventBase.Publish()
- uid: CG.Blazor.Events.EventBase.Publish*
  name: Publish
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Publish_
  commentId: Overload:CG.Blazor.Events.EventBase.Publish
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase.Publish
  nameWithType: EventBase.Publish
- uid: CG.Blazor.Events.EventBase.Subscribe(System.Action)
  name: Subscribe(Action)
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Subscribe_System_Action_
  commentId: M:CG.Blazor.Events.EventBase.Subscribe(System.Action)
  fullName: CG.Blazor.Events.EventBase.Subscribe(System.Action)
  nameWithType: EventBase.Subscribe(Action)
- uid: CG.Blazor.Events.EventBase.Subscribe(System.Action,System.Boolean)
  name: Subscribe(Action, Boolean)
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Subscribe_System_Action_System_Boolean_
  commentId: M:CG.Blazor.Events.EventBase.Subscribe(System.Action,System.Boolean)
  fullName: CG.Blazor.Events.EventBase.Subscribe(System.Action, System.Boolean)
  nameWithType: EventBase.Subscribe(Action, Boolean)
- uid: CG.Blazor.Events.EventBase.Subscribe*
  name: Subscribe
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Subscribe_
  commentId: Overload:CG.Blazor.Events.EventBase.Subscribe
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase.Subscribe
  nameWithType: EventBase.Subscribe
- uid: CG.Blazor.Events.EventBase.Subscriptions
  name: Subscriptions
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Subscriptions
  commentId: P:CG.Blazor.Events.EventBase.Subscriptions
  fullName: CG.Blazor.Events.EventBase.Subscriptions
  nameWithType: EventBase.Subscriptions
- uid: CG.Blazor.Events.EventBase.Subscriptions*
  name: Subscriptions
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Subscriptions_
  commentId: Overload:CG.Blazor.Events.EventBase.Subscriptions
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase.Subscriptions
  nameWithType: EventBase.Subscriptions
- uid: CG.Blazor.Events.EventBase.Unsubscribe(CG.Blazor.Events.ISubscriber)
  name: Unsubscribe(ISubscriber)
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Unsubscribe_CG_Blazor_Events_ISubscriber_
  commentId: M:CG.Blazor.Events.EventBase.Unsubscribe(CG.Blazor.Events.ISubscriber)
  fullName: CG.Blazor.Events.EventBase.Unsubscribe(CG.Blazor.Events.ISubscriber)
  nameWithType: EventBase.Unsubscribe(ISubscriber)
- uid: CG.Blazor.Events.EventBase.Unsubscribe(System.Action)
  name: Unsubscribe(Action)
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Unsubscribe_System_Action_
  commentId: M:CG.Blazor.Events.EventBase.Unsubscribe(System.Action)
  fullName: CG.Blazor.Events.EventBase.Unsubscribe(System.Action)
  nameWithType: EventBase.Unsubscribe(Action)
- uid: CG.Blazor.Events.EventBase.Unsubscribe*
  name: Unsubscribe
  href: api/CG.Blazor.Events.EventBase.html#CG_Blazor_Events_EventBase_Unsubscribe_
  commentId: Overload:CG.Blazor.Events.EventBase.Unsubscribe
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase.Unsubscribe
  nameWithType: EventBase.Unsubscribe
- uid: CG.Blazor.Events.EventBase`1
  name: EventBase<T>
  href: api/CG.Blazor.Events.EventBase-1.html
  commentId: T:CG.Blazor.Events.EventBase`1
  name.vb: EventBase(Of T)
  fullName: CG.Blazor.Events.EventBase<T>
  fullName.vb: CG.Blazor.Events.EventBase(Of T)
  nameWithType: EventBase<T>
  nameWithType.vb: EventBase(Of T)
- uid: CG.Blazor.Events.EventBase`1.Contains(System.Action{`0})
  name: Contains(Action<T>)
  href: api/CG.Blazor.Events.EventBase-1.html#CG_Blazor_Events_EventBase_1_Contains_System_Action__0__
  commentId: M:CG.Blazor.Events.EventBase`1.Contains(System.Action{`0})
  name.vb: Contains(Action(Of T))
  fullName: CG.Blazor.Events.EventBase<T>.Contains(System.Action<T>)
  fullName.vb: CG.Blazor.Events.EventBase(Of T).Contains(System.Action(Of T))
  nameWithType: EventBase<T>.Contains(Action<T>)
  nameWithType.vb: EventBase(Of T).Contains(Action(Of T))
- uid: CG.Blazor.Events.EventBase`1.Contains*
  name: Contains
  href: api/CG.Blazor.Events.EventBase-1.html#CG_Blazor_Events_EventBase_1_Contains_
  commentId: Overload:CG.Blazor.Events.EventBase`1.Contains
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase<T>.Contains
  fullName.vb: CG.Blazor.Events.EventBase(Of T).Contains
  nameWithType: EventBase<T>.Contains
  nameWithType.vb: EventBase(Of T).Contains
- uid: CG.Blazor.Events.EventBase`1.Publish(`0)
  name: Publish(T)
  href: api/CG.Blazor.Events.EventBase-1.html#CG_Blazor_Events_EventBase_1_Publish__0_
  commentId: M:CG.Blazor.Events.EventBase`1.Publish(`0)
  fullName: CG.Blazor.Events.EventBase<T>.Publish(T)
  fullName.vb: CG.Blazor.Events.EventBase(Of T).Publish(T)
  nameWithType: EventBase<T>.Publish(T)
  nameWithType.vb: EventBase(Of T).Publish(T)
- uid: CG.Blazor.Events.EventBase`1.Publish*
  name: Publish
  href: api/CG.Blazor.Events.EventBase-1.html#CG_Blazor_Events_EventBase_1_Publish_
  commentId: Overload:CG.Blazor.Events.EventBase`1.Publish
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase<T>.Publish
  fullName.vb: CG.Blazor.Events.EventBase(Of T).Publish
  nameWithType: EventBase<T>.Publish
  nameWithType.vb: EventBase(Of T).Publish
- uid: CG.Blazor.Events.EventBase`1.Subscribe(System.Action{`0})
  name: Subscribe(Action<T>)
  href: api/CG.Blazor.Events.EventBase-1.html#CG_Blazor_Events_EventBase_1_Subscribe_System_Action__0__
  commentId: M:CG.Blazor.Events.EventBase`1.Subscribe(System.Action{`0})
  name.vb: Subscribe(Action(Of T))
  fullName: CG.Blazor.Events.EventBase<T>.Subscribe(System.Action<T>)
  fullName.vb: CG.Blazor.Events.EventBase(Of T).Subscribe(System.Action(Of T))
  nameWithType: EventBase<T>.Subscribe(Action<T>)
  nameWithType.vb: EventBase(Of T).Subscribe(Action(Of T))
- uid: CG.Blazor.Events.EventBase`1.Subscribe(System.Action{`0},System.Boolean)
  name: Subscribe(Action<T>, Boolean)
  href: api/CG.Blazor.Events.EventBase-1.html#CG_Blazor_Events_EventBase_1_Subscribe_System_Action__0__System_Boolean_
  commentId: M:CG.Blazor.Events.EventBase`1.Subscribe(System.Action{`0},System.Boolean)
  name.vb: Subscribe(Action(Of T), Boolean)
  fullName: CG.Blazor.Events.EventBase<T>.Subscribe(System.Action<T>, System.Boolean)
  fullName.vb: CG.Blazor.Events.EventBase(Of T).Subscribe(System.Action(Of T), System.Boolean)
  nameWithType: EventBase<T>.Subscribe(Action<T>, Boolean)
  nameWithType.vb: EventBase(Of T).Subscribe(Action(Of T), Boolean)
- uid: CG.Blazor.Events.EventBase`1.Subscribe(System.Action{`0},System.Boolean,System.Predicate{`0})
  name: Subscribe(Action<T>, Boolean, Predicate<T>)
  href: api/CG.Blazor.Events.EventBase-1.html#CG_Blazor_Events_EventBase_1_Subscribe_System_Action__0__System_Boolean_System_Predicate__0__
  commentId: M:CG.Blazor.Events.EventBase`1.Subscribe(System.Action{`0},System.Boolean,System.Predicate{`0})
  name.vb: Subscribe(Action(Of T), Boolean, Predicate(Of T))
  fullName: CG.Blazor.Events.EventBase<T>.Subscribe(System.Action<T>, System.Boolean, System.Predicate<T>)
  fullName.vb: CG.Blazor.Events.EventBase(Of T).Subscribe(System.Action(Of T), System.Boolean, System.Predicate(Of T))
  nameWithType: EventBase<T>.Subscribe(Action<T>, Boolean, Predicate<T>)
  nameWithType.vb: EventBase(Of T).Subscribe(Action(Of T), Boolean, Predicate(Of T))
- uid: CG.Blazor.Events.EventBase`1.Subscribe(System.Action{`0},System.Predicate{`0})
  name: Subscribe(Action<T>, Predicate<T>)
  href: api/CG.Blazor.Events.EventBase-1.html#CG_Blazor_Events_EventBase_1_Subscribe_System_Action__0__System_Predicate__0__
  commentId: M:CG.Blazor.Events.EventBase`1.Subscribe(System.Action{`0},System.Predicate{`0})
  name.vb: Subscribe(Action(Of T), Predicate(Of T))
  fullName: CG.Blazor.Events.EventBase<T>.Subscribe(System.Action<T>, System.Predicate<T>)
  fullName.vb: CG.Blazor.Events.EventBase(Of T).Subscribe(System.Action(Of T), System.Predicate(Of T))
  nameWithType: EventBase<T>.Subscribe(Action<T>, Predicate<T>)
  nameWithType.vb: EventBase(Of T).Subscribe(Action(Of T), Predicate(Of T))
- uid: CG.Blazor.Events.EventBase`1.Subscribe*
  name: Subscribe
  href: api/CG.Blazor.Events.EventBase-1.html#CG_Blazor_Events_EventBase_1_Subscribe_
  commentId: Overload:CG.Blazor.Events.EventBase`1.Subscribe
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase<T>.Subscribe
  fullName.vb: CG.Blazor.Events.EventBase(Of T).Subscribe
  nameWithType: EventBase<T>.Subscribe
  nameWithType.vb: EventBase(Of T).Subscribe
- uid: CG.Blazor.Events.EventBase`1.Unsubscribe(System.Action{`0})
  name: Unsubscribe(Action<T>)
  href: api/CG.Blazor.Events.EventBase-1.html#CG_Blazor_Events_EventBase_1_Unsubscribe_System_Action__0__
  commentId: M:CG.Blazor.Events.EventBase`1.Unsubscribe(System.Action{`0})
  name.vb: Unsubscribe(Action(Of T))
  fullName: CG.Blazor.Events.EventBase<T>.Unsubscribe(System.Action<T>)
  fullName.vb: CG.Blazor.Events.EventBase(Of T).Unsubscribe(System.Action(Of T))
  nameWithType: EventBase<T>.Unsubscribe(Action<T>)
  nameWithType.vb: EventBase(Of T).Unsubscribe(Action(Of T))
- uid: CG.Blazor.Events.EventBase`1.Unsubscribe*
  name: Unsubscribe
  href: api/CG.Blazor.Events.EventBase-1.html#CG_Blazor_Events_EventBase_1_Unsubscribe_
  commentId: Overload:CG.Blazor.Events.EventBase`1.Unsubscribe
  isSpec: "True"
  fullName: CG.Blazor.Events.EventBase<T>.Unsubscribe
  fullName.vb: CG.Blazor.Events.EventBase(Of T).Unsubscribe
  nameWithType: EventBase<T>.Unsubscribe
  nameWithType.vb: EventBase(Of T).Unsubscribe
- uid: CG.Blazor.Events.IEventAggregator
  name: IEventAggregator
  href: api/CG.Blazor.Events.IEventAggregator.html
  commentId: T:CG.Blazor.Events.IEventAggregator
  fullName: CG.Blazor.Events.IEventAggregator
  nameWithType: IEventAggregator
- uid: CG.Blazor.Events.IEventAggregator.GetEvent*
  name: GetEvent
  href: api/CG.Blazor.Events.IEventAggregator.html#CG_Blazor_Events_IEventAggregator_GetEvent_
  commentId: Overload:CG.Blazor.Events.IEventAggregator.GetEvent
  isSpec: "True"
  fullName: CG.Blazor.Events.IEventAggregator.GetEvent
  nameWithType: IEventAggregator.GetEvent
- uid: CG.Blazor.Events.IEventAggregator.GetEvent``1
  name: GetEvent<TEvent>()
  href: api/CG.Blazor.Events.IEventAggregator.html#CG_Blazor_Events_IEventAggregator_GetEvent__1
  commentId: M:CG.Blazor.Events.IEventAggregator.GetEvent``1
  name.vb: GetEvent(Of TEvent)()
  fullName: CG.Blazor.Events.IEventAggregator.GetEvent<TEvent>()
  fullName.vb: CG.Blazor.Events.IEventAggregator.GetEvent(Of TEvent)()
  nameWithType: IEventAggregator.GetEvent<TEvent>()
  nameWithType.vb: IEventAggregator.GetEvent(Of TEvent)()
- uid: CG.Blazor.Events.ISubscriber
  name: ISubscriber
  href: api/CG.Blazor.Events.ISubscriber.html
  commentId: T:CG.Blazor.Events.ISubscriber
  fullName: CG.Blazor.Events.ISubscriber
  nameWithType: ISubscriber
- uid: CG.Blazor.Events.ISubscriber.Id
  name: Id
  href: api/CG.Blazor.Events.ISubscriber.html#CG_Blazor_Events_ISubscriber_Id
  commentId: P:CG.Blazor.Events.ISubscriber.Id
  fullName: CG.Blazor.Events.ISubscriber.Id
  nameWithType: ISubscriber.Id
- uid: CG.Blazor.Events.ISubscriber.Id*
  name: Id
  href: api/CG.Blazor.Events.ISubscriber.html#CG_Blazor_Events_ISubscriber_Id_
  commentId: Overload:CG.Blazor.Events.ISubscriber.Id
  isSpec: "True"
  fullName: CG.Blazor.Events.ISubscriber.Id
  nameWithType: ISubscriber.Id
- uid: CG.Blazor.Events.ISubscription
  name: ISubscription
  href: api/CG.Blazor.Events.ISubscription.html
  commentId: T:CG.Blazor.Events.ISubscription
  fullName: CG.Blazor.Events.ISubscription
  nameWithType: ISubscription
- uid: CG.Blazor.Events.ISubscription.GetAction
  name: GetAction()
  href: api/CG.Blazor.Events.ISubscription.html#CG_Blazor_Events_ISubscription_GetAction
  commentId: M:CG.Blazor.Events.ISubscription.GetAction
  fullName: CG.Blazor.Events.ISubscription.GetAction()
  nameWithType: ISubscription.GetAction()
- uid: CG.Blazor.Events.ISubscription.GetAction*
  name: GetAction
  href: api/CG.Blazor.Events.ISubscription.html#CG_Blazor_Events_ISubscription_GetAction_
  commentId: Overload:CG.Blazor.Events.ISubscription.GetAction
  isSpec: "True"
  fullName: CG.Blazor.Events.ISubscription.GetAction
  nameWithType: ISubscription.GetAction
- uid: CG.Blazor.Events.ISubscription.Subscriber
  name: Subscriber
  href: api/CG.Blazor.Events.ISubscription.html#CG_Blazor_Events_ISubscription_Subscriber
  commentId: P:CG.Blazor.Events.ISubscription.Subscriber
  fullName: CG.Blazor.Events.ISubscription.Subscriber
  nameWithType: ISubscription.Subscriber
- uid: CG.Blazor.Events.ISubscription.Subscriber*
  name: Subscriber
  href: api/CG.Blazor.Events.ISubscription.html#CG_Blazor_Events_ISubscription_Subscriber_
  commentId: Overload:CG.Blazor.Events.ISubscription.Subscriber
  isSpec: "True"
  fullName: CG.Blazor.Events.ISubscription.Subscriber
  nameWithType: ISubscription.Subscriber
- uid: CG.Blazor.Events.IWeakDelegate
  name: IWeakDelegate
  href: api/CG.Blazor.Events.IWeakDelegate.html
  commentId: T:CG.Blazor.Events.IWeakDelegate
  fullName: CG.Blazor.Events.IWeakDelegate
  nameWithType: IWeakDelegate
- uid: CG.Blazor.Events.IWeakDelegate.Target
  name: Target
  href: api/CG.Blazor.Events.IWeakDelegate.html#CG_Blazor_Events_IWeakDelegate_Target
  commentId: P:CG.Blazor.Events.IWeakDelegate.Target
  fullName: CG.Blazor.Events.IWeakDelegate.Target
  nameWithType: IWeakDelegate.Target
- uid: CG.Blazor.Events.IWeakDelegate.Target*
  name: Target
  href: api/CG.Blazor.Events.IWeakDelegate.html#CG_Blazor_Events_IWeakDelegate_Target_
  commentId: Overload:CG.Blazor.Events.IWeakDelegate.Target
  isSpec: "True"
  fullName: CG.Blazor.Events.IWeakDelegate.Target
  nameWithType: IWeakDelegate.Target
- uid: CG.Blazor.IModule
  name: IModule
  href: api/CG.Blazor.IModule.html
  commentId: T:CG.Blazor.IModule
  fullName: CG.Blazor.IModule
  nameWithType: IModule
- uid: CG.Blazor.IModule.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name: Configure(IApplicationBuilder, IWebHostEnvironment)
  href: api/CG.Blazor.IModule.html#CG_Blazor_IModule_Configure_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  commentId: M:CG.Blazor.IModule.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  fullName: CG.Blazor.IModule.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  nameWithType: IModule.Configure(IApplicationBuilder, IWebHostEnvironment)
- uid: CG.Blazor.IModule.Configure*
  name: Configure
  href: api/CG.Blazor.IModule.html#CG_Blazor_IModule_Configure_
  commentId: Overload:CG.Blazor.IModule.Configure
  isSpec: "True"
  fullName: CG.Blazor.IModule.Configure
  nameWithType: IModule.Configure
- uid: CG.Blazor.IModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: ConfigureServices(IServiceCollection, IConfiguration)
  href: api/CG.Blazor.IModule.html#CG_Blazor_IModule_ConfigureServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:CG.Blazor.IModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: CG.Blazor.IModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: IModule.ConfigureServices(IServiceCollection, IConfiguration)
- uid: CG.Blazor.IModule.ConfigureServices*
  name: ConfigureServices
  href: api/CG.Blazor.IModule.html#CG_Blazor_IModule_ConfigureServices_
  commentId: Overload:CG.Blazor.IModule.ConfigureServices
  isSpec: "True"
  fullName: CG.Blazor.IModule.ConfigureServices
  nameWithType: IModule.ConfigureServices
- uid: CG.Blazor.Options
  name: CG.Blazor.Options
  href: api/CG.Blazor.Options.html
  commentId: N:CG.Blazor.Options
  fullName: CG.Blazor.Options
  nameWithType: CG.Blazor.Options
- uid: CG.Blazor.Options.ModuleOptions
  name: ModuleOptions
  href: api/CG.Blazor.Options.ModuleOptions.html
  commentId: T:CG.Blazor.Options.ModuleOptions
  fullName: CG.Blazor.Options.ModuleOptions
  nameWithType: ModuleOptions
- uid: CG.Blazor.Options.ModuleOptions.Assembly
  name: Assembly
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Assembly
  commentId: P:CG.Blazor.Options.ModuleOptions.Assembly
  fullName: CG.Blazor.Options.ModuleOptions.Assembly
  nameWithType: ModuleOptions.Assembly
- uid: CG.Blazor.Options.ModuleOptions.Assembly*
  name: Assembly
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Assembly_
  commentId: Overload:CG.Blazor.Options.ModuleOptions.Assembly
  isSpec: "True"
  fullName: CG.Blazor.Options.ModuleOptions.Assembly
  nameWithType: ModuleOptions.Assembly
- uid: CG.Blazor.Options.ModuleOptions.EntryPoint
  name: EntryPoint
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_EntryPoint
  commentId: P:CG.Blazor.Options.ModuleOptions.EntryPoint
  fullName: CG.Blazor.Options.ModuleOptions.EntryPoint
  nameWithType: ModuleOptions.EntryPoint
- uid: CG.Blazor.Options.ModuleOptions.EntryPoint*
  name: EntryPoint
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_EntryPoint_
  commentId: Overload:CG.Blazor.Options.ModuleOptions.EntryPoint
  isSpec: "True"
  fullName: CG.Blazor.Options.ModuleOptions.EntryPoint
  nameWithType: ModuleOptions.EntryPoint
- uid: CG.Blazor.Options.ModuleOptions.Routed
  name: Routed
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Routed
  commentId: P:CG.Blazor.Options.ModuleOptions.Routed
  fullName: CG.Blazor.Options.ModuleOptions.Routed
  nameWithType: ModuleOptions.Routed
- uid: CG.Blazor.Options.ModuleOptions.Routed*
  name: Routed
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Routed_
  commentId: Overload:CG.Blazor.Options.ModuleOptions.Routed
  isSpec: "True"
  fullName: CG.Blazor.Options.ModuleOptions.Routed
  nameWithType: ModuleOptions.Routed
- uid: CG.Blazor.Options.ModuleOptions.Scripts
  name: Scripts
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Scripts
  commentId: P:CG.Blazor.Options.ModuleOptions.Scripts
  fullName: CG.Blazor.Options.ModuleOptions.Scripts
  nameWithType: ModuleOptions.Scripts
- uid: CG.Blazor.Options.ModuleOptions.Scripts*
  name: Scripts
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_Scripts_
  commentId: Overload:CG.Blazor.Options.ModuleOptions.Scripts
  isSpec: "True"
  fullName: CG.Blazor.Options.ModuleOptions.Scripts
  nameWithType: ModuleOptions.Scripts
- uid: CG.Blazor.Options.ModuleOptions.StyleSheets
  name: StyleSheets
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_StyleSheets
  commentId: P:CG.Blazor.Options.ModuleOptions.StyleSheets
  fullName: CG.Blazor.Options.ModuleOptions.StyleSheets
  nameWithType: ModuleOptions.StyleSheets
- uid: CG.Blazor.Options.ModuleOptions.StyleSheets*
  name: StyleSheets
  href: api/CG.Blazor.Options.ModuleOptions.html#CG_Blazor_Options_ModuleOptions_StyleSheets_
  commentId: Overload:CG.Blazor.Options.ModuleOptions.StyleSheets
  isSpec: "True"
  fullName: CG.Blazor.Options.ModuleOptions.StyleSheets
  nameWithType: ModuleOptions.StyleSheets
- uid: CG.Blazor.Options.PluginOptions
  name: PluginOptions
  href: api/CG.Blazor.Options.PluginOptions.html
  commentId: T:CG.Blazor.Options.PluginOptions
  fullName: CG.Blazor.Options.PluginOptions
  nameWithType: PluginOptions
- uid: CG.Blazor.Options.PluginOptions.Modules
  name: Modules
  href: api/CG.Blazor.Options.PluginOptions.html#CG_Blazor_Options_PluginOptions_Modules
  commentId: P:CG.Blazor.Options.PluginOptions.Modules
  fullName: CG.Blazor.Options.PluginOptions.Modules
  nameWithType: PluginOptions.Modules
- uid: CG.Blazor.Options.PluginOptions.Modules*
  name: Modules
  href: api/CG.Blazor.Options.PluginOptions.html#CG_Blazor_Options_PluginOptions_Modules_
  commentId: Overload:CG.Blazor.Options.PluginOptions.Modules
  isSpec: "True"
  fullName: CG.Blazor.Options.PluginOptions.Modules
  nameWithType: PluginOptions.Modules
- uid: CG.Blazor.Options.PluginOptions.SectionKey
  name: SectionKey
  href: api/CG.Blazor.Options.PluginOptions.html#CG_Blazor_Options_PluginOptions_SectionKey
  commentId: F:CG.Blazor.Options.PluginOptions.SectionKey
  fullName: CG.Blazor.Options.PluginOptions.SectionKey
  nameWithType: PluginOptions.SectionKey
- uid: CG.Blazor.Plugins
  name: CG.Blazor.Plugins
  href: api/CG.Blazor.Plugins.html
  commentId: N:CG.Blazor.Plugins
  fullName: CG.Blazor.Plugins
  nameWithType: CG.Blazor.Plugins
- uid: CG.Blazor.Plugins.ModuleBase
  name: ModuleBase
  href: api/CG.Blazor.Plugins.ModuleBase.html
  commentId: T:CG.Blazor.Plugins.ModuleBase
  fullName: CG.Blazor.Plugins.ModuleBase
  nameWithType: ModuleBase
- uid: CG.Blazor.Plugins.ModuleBase.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name: Configure(IApplicationBuilder, IWebHostEnvironment)
  href: api/CG.Blazor.Plugins.ModuleBase.html#CG_Blazor_Plugins_ModuleBase_Configure_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  commentId: M:CG.Blazor.Plugins.ModuleBase.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  fullName: CG.Blazor.Plugins.ModuleBase.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  nameWithType: ModuleBase.Configure(IApplicationBuilder, IWebHostEnvironment)
- uid: CG.Blazor.Plugins.ModuleBase.Configure*
  name: Configure
  href: api/CG.Blazor.Plugins.ModuleBase.html#CG_Blazor_Plugins_ModuleBase_Configure_
  commentId: Overload:CG.Blazor.Plugins.ModuleBase.Configure
  isSpec: "True"
  fullName: CG.Blazor.Plugins.ModuleBase.Configure
  nameWithType: ModuleBase.Configure
- uid: CG.Blazor.Plugins.ModuleBase.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: ConfigureServices(IServiceCollection, IConfiguration)
  href: api/CG.Blazor.Plugins.ModuleBase.html#CG_Blazor_Plugins_ModuleBase_ConfigureServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:CG.Blazor.Plugins.ModuleBase.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: CG.Blazor.Plugins.ModuleBase.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ModuleBase.ConfigureServices(IServiceCollection, IConfiguration)
- uid: CG.Blazor.Plugins.ModuleBase.ConfigureServices*
  name: ConfigureServices
  href: api/CG.Blazor.Plugins.ModuleBase.html#CG_Blazor_Plugins_ModuleBase_ConfigureServices_
  commentId: Overload:CG.Blazor.Plugins.ModuleBase.ConfigureServices
  isSpec: "True"
  fullName: CG.Blazor.Plugins.ModuleBase.ConfigureServices
  nameWithType: ModuleBase.ConfigureServices
- uid: CG.Blazor.ViewModels
  name: CG.Blazor.ViewModels
  href: api/CG.Blazor.ViewModels.html
  commentId: N:CG.Blazor.ViewModels
  fullName: CG.Blazor.ViewModels
  nameWithType: CG.Blazor.ViewModels
- uid: CG.Blazor.ViewModels.IViewModel
  name: IViewModel
  href: api/CG.Blazor.ViewModels.IViewModel.html
  commentId: T:CG.Blazor.ViewModels.IViewModel
  fullName: CG.Blazor.ViewModels.IViewModel
  nameWithType: IViewModel
- uid: CG.Blazor.ViewModels.ViewModelBase
  name: ViewModelBase
  href: api/CG.Blazor.ViewModels.ViewModelBase.html
  commentId: T:CG.Blazor.ViewModels.ViewModelBase
  fullName: CG.Blazor.ViewModels.ViewModelBase
  nameWithType: ViewModelBase
- uid: CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged(System.String)
  name: OnPropertyChanged(String)
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_OnPropertyChanged_System_String_
  commentId: M:CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged(System.String)
  fullName: CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged(System.String)
  nameWithType: ViewModelBase.OnPropertyChanged(String)
- uid: CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged*
  name: OnPropertyChanged
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_OnPropertyChanged_
  commentId: Overload:CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged
  isSpec: "True"
  fullName: CG.Blazor.ViewModels.ViewModelBase.OnPropertyChanged
  nameWithType: ViewModelBase.OnPropertyChanged
- uid: CG.Blazor.ViewModels.ViewModelBase.PropertyChanged
  name: PropertyChanged
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_PropertyChanged
  commentId: E:CG.Blazor.ViewModels.ViewModelBase.PropertyChanged
  fullName: CG.Blazor.ViewModels.ViewModelBase.PropertyChanged
  nameWithType: ViewModelBase.PropertyChanged
- uid: CG.Blazor.ViewModels.ViewModelBase.SetValue*
  name: SetValue
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_SetValue_
  commentId: Overload:CG.Blazor.ViewModels.ViewModelBase.SetValue
  isSpec: "True"
  fullName: CG.Blazor.ViewModels.ViewModelBase.SetValue
  nameWithType: ViewModelBase.SetValue
- uid: CG.Blazor.ViewModels.ViewModelBase.SetValue``1(``0@,``0,System.String)
  name: SetValue<T>(ref T, T, String)
  href: api/CG.Blazor.ViewModels.ViewModelBase.html#CG_Blazor_ViewModels_ViewModelBase_SetValue__1___0____0_System_String_
  commentId: M:CG.Blazor.ViewModels.ViewModelBase.SetValue``1(``0@,``0,System.String)
  name.vb: SetValue(Of T)(ByRef T, T, String)
  fullName: CG.Blazor.ViewModels.ViewModelBase.SetValue<T>(ref T, T, System.String)
  fullName.vb: CG.Blazor.ViewModels.ViewModelBase.SetValue(Of T)(ByRef T, T, System.String)
  nameWithType: ViewModelBase.SetValue<T>(ref T, T, String)
  nameWithType.vb: ViewModelBase.SetValue(Of T)(ByRef T, T, String)
- uid: CG.Blazor.Views
  name: CG.Blazor.Views
  href: api/CG.Blazor.Views.html
  commentId: N:CG.Blazor.Views
  fullName: CG.Blazor.Views
  nameWithType: CG.Blazor.Views
- uid: CG.Blazor.Views.ViewBase`1
  name: ViewBase<T>
  href: api/CG.Blazor.Views.ViewBase-1.html
  commentId: T:CG.Blazor.Views.ViewBase`1
  name.vb: ViewBase(Of T)
  fullName: CG.Blazor.Views.ViewBase<T>
  fullName.vb: CG.Blazor.Views.ViewBase(Of T)
  nameWithType: ViewBase<T>
  nameWithType.vb: ViewBase(Of T)
- uid: CG.Blazor.Views.ViewBase`1.Dispose
  name: Dispose()
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_Dispose
  commentId: M:CG.Blazor.Views.ViewBase`1.Dispose
  fullName: CG.Blazor.Views.ViewBase<T>.Dispose()
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).Dispose()
  nameWithType: ViewBase<T>.Dispose()
  nameWithType.vb: ViewBase(Of T).Dispose()
- uid: CG.Blazor.Views.ViewBase`1.Dispose*
  name: Dispose
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_Dispose_
  commentId: Overload:CG.Blazor.Views.ViewBase`1.Dispose
  isSpec: "True"
  fullName: CG.Blazor.Views.ViewBase<T>.Dispose
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).Dispose
  nameWithType: ViewBase<T>.Dispose
  nameWithType.vb: ViewBase(Of T).Dispose
- uid: CG.Blazor.Views.ViewBase`1.OnInitializedAsync
  name: OnInitializedAsync()
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_OnInitializedAsync
  commentId: M:CG.Blazor.Views.ViewBase`1.OnInitializedAsync
  fullName: CG.Blazor.Views.ViewBase<T>.OnInitializedAsync()
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).OnInitializedAsync()
  nameWithType: ViewBase<T>.OnInitializedAsync()
  nameWithType.vb: ViewBase(Of T).OnInitializedAsync()
- uid: CG.Blazor.Views.ViewBase`1.OnInitializedAsync*
  name: OnInitializedAsync
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_OnInitializedAsync_
  commentId: Overload:CG.Blazor.Views.ViewBase`1.OnInitializedAsync
  isSpec: "True"
  fullName: CG.Blazor.Views.ViewBase<T>.OnInitializedAsync
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).OnInitializedAsync
  nameWithType: ViewBase<T>.OnInitializedAsync
  nameWithType.vb: ViewBase(Of T).OnInitializedAsync
- uid: CG.Blazor.Views.ViewBase`1.ViewModel
  name: ViewModel
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_ViewModel
  commentId: P:CG.Blazor.Views.ViewBase`1.ViewModel
  fullName: CG.Blazor.Views.ViewBase<T>.ViewModel
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).ViewModel
  nameWithType: ViewBase<T>.ViewModel
  nameWithType.vb: ViewBase(Of T).ViewModel
- uid: CG.Blazor.Views.ViewBase`1.ViewModel*
  name: ViewModel
  href: api/CG.Blazor.Views.ViewBase-1.html#CG_Blazor_Views_ViewBase_1_ViewModel_
  commentId: Overload:CG.Blazor.Views.ViewBase`1.ViewModel
  isSpec: "True"
  fullName: CG.Blazor.Views.ViewBase<T>.ViewModel
  fullName.vb: CG.Blazor.Views.ViewBase(Of T).ViewModel
  nameWithType: ViewBase<T>.ViewModel
  nameWithType.vb: ViewBase(Of T).ViewModel
- uid: Microsoft.AspNetCore.Builder
  name: Microsoft.AspNetCore.Builder
  href: api/Microsoft.AspNetCore.Builder.html
  commentId: N:Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  name: ApplicationBuilderExtensions
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html
  commentId: T:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  nameWithType: ApplicationBuilderExtensions
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name: UsePlugins(IApplicationBuilder, IWebHostEnvironment)
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html#Microsoft_AspNetCore_Builder_ApplicationBuilderExtensions_UsePlugins_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  commentId: M:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  nameWithType: ApplicationBuilderExtensions.UsePlugins(IApplicationBuilder, IWebHostEnvironment)
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins*
  name: UsePlugins
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html#Microsoft_AspNetCore_Builder_ApplicationBuilderExtensions_UsePlugins_
  commentId: Overload:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins
  isSpec: "True"
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UsePlugins
  nameWithType: ApplicationBuilderExtensions.UsePlugins
- uid: Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  href: api/Microsoft.Extensions.DependencyInjection.html
  commentId: N:Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html
  commentId: T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddEventAggregator(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddEventAggregator(IServiceCollection)
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddEventAggregator_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddEventAggregator(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddEventAggregator(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddEventAggregator(IServiceCollection)
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddEventAggregator*
  name: AddEventAggregator
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddEventAggregator_
  commentId: Overload:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddEventAggregator
  isSpec: "True"
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddEventAggregator
  nameWithType: ServiceCollectionExtensions.AddEventAggregator
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddPlugins(IServiceCollection, IConfiguration)
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddPlugins_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ServiceCollectionExtensions.AddPlugins(IServiceCollection, IConfiguration)
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins*
  name: AddPlugins
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddPlugins_
  commentId: Overload:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins
  isSpec: "True"
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddPlugins
  nameWithType: ServiceCollectionExtensions.AddPlugins
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String)
  name: AddViewModels(IServiceCollection, String, String)
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddViewModels_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_String_System_String_
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.String)
  nameWithType: ServiceCollectionExtensions.AddViewModels(IServiceCollection, String, String)
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels*
  name: AddViewModels
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddViewModels_
  commentId: Overload:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels
  isSpec: "True"
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddViewModels
  nameWithType: ServiceCollectionExtensions.AddViewModels

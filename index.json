{
  "api/CG.Blazor.Components.DualList.html": {
    "href": "api/CG.Blazor.Components.DualList.html",
    "title": "Class DualList",
    "keywords": "Class DualList This class is the code-behind for the DualList control. Inheritance System.Object DualList Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Components Assembly : CG.Blazor.dll Syntax public class DualList"
  },
  "api/CG.Blazor.Components.DynamicNavMenu._MenuItem.html": {
    "href": "api/CG.Blazor.Components.DynamicNavMenu._MenuItem.html",
    "title": "Class DynamicNavMenu._MenuItem",
    "keywords": "Class DynamicNavMenu._MenuItem This class contains properties for a menu item. Inheritance System.Object DynamicNavMenu._MenuItem Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Components Assembly : CG.Blazor.dll Syntax public class _MenuItem Properties GroupColor This property contains the color for the group menu Declaration public Color? GroupColor { get; set; } Property Value Type Description System.Nullable < Color > GroupIcon This property contains the icon for the group menu Declaration public string GroupIcon { get; set; } Property Value Type Description System.String GroupTitle This property contains the title for the group menu Declaration public string GroupTitle { get; set; } Property Value Type Description System.String MenuColor This property contains the color for the menu Declaration public Color? MenuColor { get; set; } Property Value Type Description System.Nullable < Color > MenuDisabled This property indicates whether or not the menu is disabled. Declaration public bool MenuDisabled { get; set; } Property Value Type Description System.Boolean MenuIcon This property contains the icon for the menu Declaration public string MenuIcon { get; set; } Property Value Type Description System.String MenuMatch This property contains the match for the menu Declaration public NavLinkMatch? MenuMatch { get; set; } Property Value Type Description System.Nullable < NavLinkMatch > MenuRoute This property contains the route for the menu Declaration public string MenuRoute { get; set; } Property Value Type Description System.String MenuTitle This property contains the title for the menu Declaration public string MenuTitle { get; set; } Property Value Type Description System.String Priority This property indicates the relative priority for the menu. Declaration public int? Priority { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/CG.Blazor.Components.DynamicNavMenu.html": {
    "href": "api/CG.Blazor.Components.DynamicNavMenu.html",
    "title": "Class DynamicNavMenu",
    "keywords": "Class DynamicNavMenu This class is the code-behind for the DynamicNavMenu component. Inheritance System.Object DynamicNavMenu Namespace : CG.Blazor.Components Assembly : CG.Blazor.dll Syntax public class DynamicNavMenu : MudNavMenu Fields _menuItems This field contains the list of menu items. Declaration protected readonly List<DynamicNavMenu._MenuItem> _menuItems Field Value Type Description List < DynamicNavMenu._MenuItem > Properties ChildContentOnTop This property indicates whether or not to render any child content before the dynamic menu elements. If false , child content is rendered after dynamic menu elements. Declaration public bool ChildContentOnTop { get; set; } Property Value Type Description System.Boolean Methods OnInitialized() This method is called to initialize the component. Declaration protected override void OnInitialized()"
  },
  "api/CG.Blazor.Components.DynamicNavMenuAttribute.html": {
    "href": "api/CG.Blazor.Components.DynamicNavMenuAttribute.html",
    "title": "Class DynamicNavMenuAttribute",
    "keywords": "Class DynamicNavMenuAttribute This class is an attribute that denotes an associated dynamic navigation menu. Inheritance System.Object DynamicNavMenuAttribute Namespace : CG.Blazor.Components Assembly : CG.Blazor.dll Syntax public class DynamicNavMenuAttribute : Attribute Constructors DynamicNavMenuAttribute(String) This constructor creates a new instance of the DynamicNavMenuAttribute Declaration public DynamicNavMenuAttribute(string menuTitle) Parameters Type Name Description System.String menuTitle The title for the menu. Properties GroupColor This property contains the color for the group menu. Declaration public string GroupColor { get; set; } Property Value Type Description System.String GroupIcon This property contains the icon for the group menu. Declaration public string GroupIcon { get; set; } Property Value Type Description System.String GroupTitle This property contains the title for the group menu. Declaration public string GroupTitle { get; set; } Property Value Type Description System.String MenuColor This property contains the color for the menu. Declaration public string MenuColor { get; set; } Property Value Type Description System.String MenuDisabled This property indicates whether or not the menu is disabled. Declaration public bool MenuDisabled { get; set; } Property Value Type Description System.Boolean MenuIcon This property contains the icon for the menu. Declaration public string MenuIcon { get; set; } Property Value Type Description System.String MenuMatch This property contains the match for the menu. Declaration public NavLinkMatch? MenuMatch { get; set; } Property Value Type Description System.Nullable < NavLinkMatch > MenuRoute This property contains the route for the menu. Declaration public string MenuRoute { get; set; } Property Value Type Description System.String MenuTitle This property contains the title for the menu. Declaration public string MenuTitle { get; } Property Value Type Description System.String Priority This property indicates the relative priority for the menu. Declaration public int? Priority { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/CG.Blazor.Components.Footer.html": {
    "href": "api/CG.Blazor.Components.Footer.html",
    "title": "Class Footer",
    "keywords": "Class Footer This class is the code-behind for the Footer component. Inheritance System.Object Footer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Components Assembly : CG.Blazor.dll Syntax public class Footer Properties ChildContent This property contains any child content. Declaration public RenderFragment ChildContent { get; set; } Property Value Type Description RenderFragment"
  },
  "api/CG.Blazor.Components.html": {
    "href": "api/CG.Blazor.Components.html",
    "title": "Namespace CG.Blazor.Components",
    "keywords": "Namespace CG.Blazor.Components Classes DualList This class is the code-behind for the DualList control. DynamicNavMenu This class is the code-behind for the DynamicNavMenu component. DynamicNavMenu._MenuItem This class contains properties for a menu item. DynamicNavMenuAttribute This class is an attribute that denotes an associated dynamic navigation menu. Footer This class is the code-behind for the Footer component. IndexChangedEventArgs This class contains arguments for the OnIndexChanged event. Wizard This class is the code-behind for the Wizard razor component. WizardPanel This class is the code-behind for the WizardPanel razor component."
  },
  "api/CG.Blazor.Components.IndexChangedEventArgs.html": {
    "href": "api/CG.Blazor.Components.IndexChangedEventArgs.html",
    "title": "Class IndexChangedEventArgs",
    "keywords": "Class IndexChangedEventArgs This class contains arguments for the OnIndexChanged event. Inheritance System.Object IndexChangedEventArgs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Components Assembly : CG.Blazor.dll Syntax public class IndexChangedEventArgs Properties CurrentIndex This property indicates the current index. Declaration public int? CurrentIndex { get; } Property Value Type Description System.Nullable < System.Int32 > NewIndex This property indicates the new index. Declaration public int? NewIndex { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/CG.Blazor.Components.Wizard.html": {
    "href": "api/CG.Blazor.Components.Wizard.html",
    "title": "Class Wizard",
    "keywords": "Class Wizard This class is the code-behind for the Wizard razor component. Inheritance System.Object Wizard Implements IAsyncDisposable Namespace : CG.Blazor.Components Assembly : CG.Blazor.dll Syntax public class Wizard : MudComponentBase Constructors Wizard() This constructor creates a new instance of the Wizard class. Declaration public Wizard() Fields _disposed This field indicate whether the component has been disposed. Declaration protected bool _disposed Field Value Type Description System.Boolean _panels This field contains the inner list of wizard panels. Declaration protected readonly List<WizardPanel> _panels Field Value Type Description List < WizardPanel > Properties AllowActiveTimeline This property indicates whether or not to the timeline should respond to mouse clicks. Declaration public bool AllowActiveTimeline { get; set; } Property Value Type Description System.Boolean CancelButtonColor This property contains the color for the cancel button. Declaration public Color CancelButtonColor { get; set; } Property Value Type Description Color CancelButtonTooltip This property contains the tooltip for the cancel button. Declaration public string CancelButtonTooltip { get; set; } Property Value Type Description System.String CancelButtonVariant This property contains the variant for the cancel button. Declaration public Variant CancelButtonVariant { get; set; } Property Value Type Description Variant CanSkipAhead This property indicates whether the wizard can skip ahead pages, or not. Declaration public bool CanSkipAhead { get; set; } Property Value Type Description System.Boolean ChildContent This property contains the child content for the component. Declaration public RenderFragment? ChildContent { get; set; } Property Value Type Description System.Nullable < RenderFragment > Classname This property contains the CSS class for the component. Declaration protected string Classname { get; } Property Value Type Description System.String Description This property contains the description for the wizard. Declaration public string Description { get; set; } Property Value Type Description System.String DescriptionColor This property contains the color for the wizard descriptions. Declaration public Color DescriptionColor { get; set; } Property Value Type Description Color DescriptionTypo This property contains the typography for the wizard descriptions. Declaration public Typo DescriptionTypo { get; set; } Property Value Type Description Typo DisableNextButton This property indicates whether the next button should be disabled, or not. Declaration public bool DisableNextButton { get; set; } Property Value Type Description System.Boolean DisablePreviousButton This property indicates whether the previous button should be disabled, or not. Declaration public bool DisablePreviousButton { get; set; } Property Value Type Description System.Boolean DotColor This property contains the color for timeline dots. Declaration public Color DotColor { get; set; } Property Value Type Description Color Elevation This property contains the elevation for the component. Declaration public int Elevation { get; set; } Property Value Type Description System.Int32 FinishButtonColor This property contains the color for the finish button. Declaration public Color FinishButtonColor { get; set; } Property Value Type Description Color FinishButtonTooltip This property contains the tooltip for the finish button. Declaration public string FinishButtonTooltip { get; set; } Property Value Type Description System.String FinishButtonVariant This property contains the variant for the finish button. Declaration public Variant FinishButtonVariant { get; set; } Property Value Type Description Variant HideActions This property indicates whether to hide the actions area, or not. Declaration public bool HideActions { get; set; } Property Value Type Description System.Boolean HideCancelButton This property indicates whether to show the cancel button, or not. Declaration public bool HideCancelButton { get; set; } Property Value Type Description System.Boolean HideFinishButton This property indicates whether to show the finish button, or not. Declaration public bool HideFinishButton { get; set; } Property Value Type Description System.Boolean HideHeader This property indicates whether to hide the header area, or not. Declaration public bool HideHeader { get; set; } Property Value Type Description System.Boolean HideTimeline This property indicates whether to hide the header timeline, or not. Declaration public bool HideTimeline { get; set; } Property Value Type Description System.Boolean IsFinishVisible This property indicates whether the finish button should be hidden, or not. Declaration public bool IsFinishVisible { get; } Property Value Type Description System.Boolean IsHeaderVisible This property indicates whether the header should be displayed, or not. This property is takes into consideration the value of the HideHeader property. Declaration protected bool IsHeaderVisible { get; } Property Value Type Description System.Boolean IsNextDisabled This property indicates whether the next button should be disabled, or not. Declaration public bool IsNextDisabled { get; } Property Value Type Description System.Boolean IsPreviousDisabled This property indicates whether the previous button should be disabled, or not. Declaration public bool IsPreviousDisabled { get; } Property Value Type Description System.Boolean NextButtonColor This property contains the color for the next button. Declaration public Color NextButtonColor { get; set; } Property Value Type Description Color NextButtonTooltip This property contains the tooltip for the next button. Declaration public string NextButtonTooltip { get; set; } Property Value Type Description System.String NextButtonVariant This property contains the variant for the next button. Declaration public Variant NextButtonVariant { get; set; } Property Value Type Description Variant OnIndexChanged This event is raised whenever the index changes. Declaration public EventCallback<IndexChangedEventArgs> OnIndexChanged { get; set; } Property Value Type Description EventCallback < IndexChangedEventArgs > OnWizardCancelled This event is raised whenever the wizard is cancelled. Declaration public EventCallback OnWizardCancelled { get; set; } Property Value Type Description EventCallback OnWizardFinished This event is raised whenever the wizard is finished. Declaration public EventCallback OnWizardFinished { get; set; } Property Value Type Description EventCallback Outlined This property indicates whether the wizard should be outlined, or not. True to outline; False otherwise. Declaration public bool Outlined { get; set; } Property Value Type Description System.Boolean Panels This property contains a list of the current wizard panels. Declaration public IReadOnlyList<WizardPanel> Panels { get; } Property Value Type Description IReadOnlyList < WizardPanel > PreviousButtonColor This property contains the color for the previous button. Declaration public Color PreviousButtonColor { get; set; } Property Value Type Description Color PreviousButtonTooltip This property contains the tooltip for the previous button. Declaration public string PreviousButtonTooltip { get; set; } Property Value Type Description System.String PreviousButtonVariant This property contains the variant for the previous button. Declaration public Variant PreviousButtonVariant { get; set; } Property Value Type Description Variant SelectedDotColor This property contains the color for selected timeline dot. Declaration public Color SelectedDotColor { get; set; } Property Value Type Description Color SelectedIndex This property contains the index of the currently selected panel. Declaration public int? SelectedIndex { get; set; } Property Value Type Description System.Nullable < System.Int32 > SelectedPanel This property contains the currently selected panel. Declaration public WizardPanel SelectedPanel { get; set; } Property Value Type Description WizardPanel Square This property indicates whether the border radius should be set to zero, or not. True to set the border radius to zero; False otherwise. Declaration public bool Square { get; set; } Property Value Type Description System.Boolean Title This property contains the title for the wizard. Declaration public string Title { get; set; } Property Value Type Description System.String TitleColor This property contains the color for the wizard title. Declaration public Color TitleColor { get; set; } Property Value Type Description Color TitleTypo This property contains the typography for the wizard title. Declaration public Typo TitleTypo { get; set; } Property Value Type Description Typo Methods AddPanel(WizardPanel) This method adds a new wizard panel to the component. Declaration protected void AddPanel(WizardPanel panel) Parameters Type Name Description WizardPanel panel The wizard panel to add. DisposeAsync() This method is called to dispose of the component. Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask A for the operation. OnAfterRender(Boolean) This method is called after a render operation. Declaration protected override void OnAfterRender(bool firstRender) Parameters Type Name Description System.Boolean firstRender OnNext() This method is called to select the next panel in the wizard. Declaration protected void OnNext() OnPrevious() This method is called to select the previous panel in the wizard. Declaration protected void OnPrevious() RaiseWizardCancelled() This method cancels the wizard. Declaration protected async Task RaiseWizardCancelled() Returns Type Description Task A task to perform the operation. RaiseWizardFinished() This method finishes the wizard. Declaration protected async Task RaiseWizardFinished() Returns Type Description Task A task to perform the operation. RemovePanel(WizardPanel) This method removes a panel from the component. Declaration protected Task RemovePanel(WizardPanel panel) Parameters Type Name Description WizardPanel panel The wizard panel to remove. Returns Type Description Task Select(WizardPanel) Declaration public void Select(WizardPanel panel) Parameters Type Name Description WizardPanel panel Select(Nullable<Int32>) This method causes the wizard to navigate to the specified panel index. Declaration public void Select(int? index) Parameters Type Name Description System.Nullable < System.Int32 > index The index to use for the operation. TimelineSelect(Nullable<Int32>) This is called when the user clicks the timeline. Declaration protected void TimelineSelect(int? index) Parameters Type Name Description System.Nullable < System.Int32 > index The index to use for the operation. Implements IAsyncDisposable"
  },
  "api/CG.Blazor.Components.WizardPanel.html": {
    "href": "api/CG.Blazor.Components.WizardPanel.html",
    "title": "Class WizardPanel",
    "keywords": "Class WizardPanel This class is the code-behind for the WizardPanel razor component. Inheritance System.Object WizardPanel Implements IAsyncDisposable Namespace : CG.Blazor.Components Assembly : CG.Blazor.dll Syntax public class WizardPanel : MudComponentBase Fields _disposed This field indicate whether the component has been disposed. Declaration protected bool _disposed Field Value Type Description System.Boolean Properties ChildContent This property contains the child content for the panel. Declaration public RenderFragment? ChildContent { get; set; } Property Value Type Description System.Nullable < RenderFragment > Description This property contains the description to display when this panel is active. This value overrides the Description property, when this panel is selected. Declaration public string Description { get; set; } Property Value Type Description System.String HideHeader This property indicates whether the header, on the parent, should be hidden when this panel is active. This value overrides the HideHeader property, when this panel is selected. Declaration public bool HideHeader { get; set; } Property Value Type Description System.Boolean Parent This property contains the parent of the panel. Declaration protected Wizard Parent { get; set; } Property Value Type Description Wizard Title This property contains the title to display when this panel is active. This value overrides the Title property, when this panel is selected. Declaration public string Title { get; set; } Property Value Type Description System.String Methods DisposeAsync() This method is called to dispose of the component. Declaration public async ValueTask DisposeAsync() Returns Type Description ValueTask A task to perform the operation. OnInitialized() This method is called to initialize the component. Declaration protected override void OnInitialized() Implements IAsyncDisposable"
  },
  "api/CG.Blazor.Pages.Help.About.AssemblyModel.html": {
    "href": "api/CG.Blazor.Pages.Help.About.AssemblyModel.html",
    "title": "Class AssemblyModel",
    "keywords": "Class AssemblyModel This class represents the model for a .NET assembly. Inheritance System.Object AssemblyModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Pages.Help.About Assembly : CG.Blazor.dll Syntax public class AssemblyModel Properties Company This property contains the company of the assembly. Declaration public string Company { get; set; } Property Value Type Description System.String CreationDate This property contains the creation date of the assembly. Declaration public DateTime CreationDate { get; set; } Property Value Type Description DateTime Name This property contains the name of the assembly. Declaration public string Name { get; set; } Property Value Type Description System.String Version This property contains the version of the assembly. Declaration public string Version { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Blazor.Pages.Help.About.html": {
    "href": "api/CG.Blazor.Pages.Help.About.html",
    "title": "Namespace CG.Blazor.Pages.Help.About",
    "keywords": "Namespace CG.Blazor.Pages.Help.About Classes AssemblyModel This class represents the model for a .NET assembly. Index This class is the code-behind for the Index page."
  },
  "api/CG.Blazor.Pages.Help.About.Index.html": {
    "href": "api/CG.Blazor.Pages.Help.About.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Pages.Help.About Assembly : CG.Blazor.dll Syntax public class Index Fields _assemblies This field contains the list of assemblies. Declaration protected IEnumerable<AssemblyModel>? _assemblies Field Value Type Description System.Nullable < IEnumerable < AssemblyModel >> _crumbs This field contains a reference to breadcrumbs for the view. Declaration protected readonly List<BreadcrumbItem> _crumbs Field Value Type Description List < BreadcrumbItem > Methods OnInitializedAsync() This method is called by the framework to initialize the page. Declaration protected override async Task OnInitializedAsync() Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Blazor.Themes.BaseTheme-1.html": {
    "href": "api/CG.Blazor.Themes.BaseTheme-1.html",
    "title": "Class BaseTheme<T>",
    "keywords": "Class BaseTheme<T> This class is a base implementation of a default MudBlazor UI theme. Inheritance System.Object BaseTheme<T> Namespace : CG.Blazor.Themes Assembly : CG.Blazor.dll Syntax public abstract class BaseTheme<T> : MudTheme where T : BaseTheme<T>, new() Type Parameters Name Description T The type of associated concrete theme Constructors BaseTheme() This constructor creates a new instance of the BaseTheme<T> class. Declaration protected BaseTheme() Methods Instance() This method returns a singleton instance of BaseTheme<T> Declaration public static BaseTheme<T> Instance() Returns Type Description BaseTheme <T> The singleton instance of BaseTheme<T>"
  },
  "api/CG.Blazor.Themes.html": {
    "href": "api/CG.Blazor.Themes.html",
    "title": "Namespace CG.Blazor.Themes",
    "keywords": "Namespace CG.Blazor.Themes Classes BaseTheme<T> This class is a base implementation of a default MudBlazor UI theme."
  },
  "api/MudBlazor.DialogServiceExtensions.html": {
    "href": "api/MudBlazor.DialogServiceExtensions.html",
    "title": "Class DialogServiceExtensions",
    "keywords": "Class DialogServiceExtensions This class contains extension methods related to the MudBlazor.IDialogService type. Inheritance System.Object DialogServiceExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : MudBlazor Assembly : CG.Blazor.dll Syntax public static class DialogServiceExtensions Methods ShowErrorBox(IDialogService, Exception, String, String, Char) This method shows an error message, formatted from the given exception. Declaration public static async Task ShowErrorBox(this IDialogService dialogService, Exception exception, string title = \"Something broke!\", string caption = \"\", char delimiter = '|') Parameters Type Name Description MudBlazor.IDialogService dialogService The dialog service to use for the operation. Exception exception The exception to use for the operation. System.String title The title to use for the operation. System.String caption The caption to use for the operation. System.Char delimiter The delimiter to use for parsing embedded lists in the error message. Returns Type Description Task A task to perform the operation."
  },
  "api/MudBlazor.html": {
    "href": "api/MudBlazor.html",
    "title": "Namespace MudBlazor",
    "keywords": "Namespace MudBlazor Classes DialogServiceExtensions This class contains extension methods related to the MudBlazor.IDialogService type."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Blazor.dll contains server side Blazor extensions used by other CodeGator packages."
  }
}
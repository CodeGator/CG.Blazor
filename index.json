{
  "api/CG.Blazor.ApplicationBuilderExtensions.html": {
    "href": "api/CG.Blazor.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor Assembly : CG.Blazor.dll Syntax public static class ApplicationBuilderExtensions Methods UsePlugins(IApplicationBuilder, IWebHostEnvironment) This method wires up services needed to support Blazor plugins. Declaration public static IApplicationBuilder UsePlugins(this IApplicationBuilder applicationBuilder, IWebHostEnvironment webHostEnvironment) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment webHostEnvironment The hosting environment to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder the value of the applicationBuilder parameter, for chaining method calls together."
  },
  "api/CG.Blazor.BlazorResources.html": {
    "href": "api/CG.Blazor.BlazorResources.html",
    "title": "Class BlazorResources",
    "keywords": "Class BlazorResources This class utility contains resources that were dynamically gathered from various plugins at startup. Inheritance System.Object BlazorResources Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor Assembly : CG.Blazor.dll Syntax public static class BlazorResources Properties RoutedAssemblies This property contains a list of Razor Class Library assemblies that require routing support, from Blazor, at runtime. Declaration public static IList<Assembly> RoutedAssemblies { get; } Property Value Type Description System.Collections.Generic.IList < System.Reflection.Assembly > Scripts This property contains a list of scripts that are static resources in a Razor Class Library and must be linked at runtime. Declaration public static IList<string> Scripts { get; } Property Value Type Description System.Collections.Generic.IList < System.String > StyleSheets This property contains a list of stylesheets that are static resources in a Razor Class Library and must be linked at runtime. Declaration public static IList<string> StyleSheets { get; } Property Value Type Description System.Collections.Generic.IList < System.String > Methods RenderScriptTags() This method renders any scripts in the Scripts collection as a collection of HTML script tags. Declaration public static string RenderScriptTags() Returns Type Description System.String An unencoded HTML snippet. RenderStyleSheetLinks() This method renders any style sheets in the StyleSheets collection as a collection of HTML link tags. Declaration public static string RenderStyleSheetLinks() Returns Type Description System.String An unencoded HTML snippet."
  },
  "api/CG.Blazor.ClaimsPrincipalExtensions.html": {
    "href": "api/CG.Blazor.ClaimsPrincipalExtensions.html",
    "title": "Class ClaimsPrincipalExtensions",
    "keywords": "Class ClaimsPrincipalExtensions Inheritance System.Object ClaimsPrincipalExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor Assembly : CG.Blazor.dll Syntax public static class ClaimsPrincipalExtensions Methods UserCountry(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.Country claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserCountry(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserDateOfBirth(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.DateOfBirth claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserDateOfBirth(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserEmail(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.Email claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserEmail(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserGender(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.Gender claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserGender(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserGivenName(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.GivenName claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserGivenName(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserHomePhone(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.HomePhone claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserHomePhone(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserId(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.NameIdentifier claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserId(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserMobilePhone(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.MobilePhone claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserMobilePhone(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserName(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.Name claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserName(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserOtherPhone(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.OtherPhone claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserOtherPhone(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserPostalCode(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.PostalCode claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserPostalCode(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserSid(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.Sid claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserSid(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserStateOrProvince(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.StateOrProvince claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserStateOrProvince(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserStreetAddress(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.StreetAddress claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserStreetAddress(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserSurname(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.Surname claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserSurname(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String UserThumbprint(ClaimsPrincipal) This method returns the value of the System.Security.Claims.ClaimTypes.Thumbprint claim, on the specified System.Security.Claims.ClaimsPrincipal object Declaration public static string UserThumbprint(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String"
  },
  "api/CG.Blazor.Commands.DelegateCommand.html": {
    "href": "api/CG.Blazor.Commands.DelegateCommand.html",
    "title": "Class DelegateCommand",
    "keywords": "Class DelegateCommand Inheritance System.Object DelegateCommand Implements System.Windows.Input.ICommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Commands Assembly : CG.Blazor.dll Syntax public sealed class DelegateCommand : ICommand Constructors DelegateCommand(SimpleEventHandler) Declaration public DelegateCommand(SimpleEventHandler handler) Parameters Type Name Description SimpleEventHandler handler Properties IsEnabled Declaration public bool IsEnabled { get; } Property Value Type Description System.Boolean Events CanExecuteChanged Declaration public event EventHandler CanExecuteChanged Event Type Type Description System.EventHandler Explicit Interface Implementations ICommand.CanExecute(Object) Declaration bool ICommand.CanExecute(object arg) Parameters Type Name Description System.Object arg Returns Type Description System.Boolean ICommand.Execute(Object) Declaration void ICommand.Execute(object arg) Parameters Type Name Description System.Object arg Implements System.Windows.Input.ICommand"
  },
  "api/CG.Blazor.Commands.html": {
    "href": "api/CG.Blazor.Commands.html",
    "title": "Namespace CG.Blazor.Commands",
    "keywords": "Namespace CG.Blazor.Commands Classes DelegateCommand Delegates SimpleEventHandler"
  },
  "api/CG.Blazor.Commands.SimpleEventHandler.html": {
    "href": "api/CG.Blazor.Commands.SimpleEventHandler.html",
    "title": "Delegate SimpleEventHandler",
    "keywords": "Delegate SimpleEventHandler Namespace : CG.Blazor.Commands Assembly : CG.Blazor.dll Syntax public delegate void SimpleEventHandler();"
  },
  "api/CG.Blazor.html": {
    "href": "api/CG.Blazor.html",
    "title": "Namespace CG.Blazor",
    "keywords": "Namespace CG.Blazor Classes ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder BlazorResources This class utility contains resources that were dynamically gathered from various plugins at startup. ClaimsPrincipalExtensions Interfaces IModule This interface represents a Blazor plugin module."
  },
  "api/CG.Blazor.IModule.html": {
    "href": "api/CG.Blazor.IModule.html",
    "title": "Interface IModule",
    "keywords": "Interface IModule This interface represents a Blazor plugin module. Namespace : CG.Blazor Assembly : CG.Blazor.dll Syntax public interface IModule Methods Initialize(IServiceCollection) This method is called by the framework when the module is first loaded, to initialize the plugin. Declaration void Initialize(IServiceCollection serviceCollection) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation."
  },
  "api/CG.Blazor.Options.html": {
    "href": "api/CG.Blazor.Options.html",
    "title": "Namespace CG.Blazor.Options",
    "keywords": "Namespace CG.Blazor.Options Classes ModuleOptions This class represents configuration options for a Blazor plugin module. PluginOptions This class represents configuration options for Blazor plugins."
  },
  "api/CG.Blazor.Options.ModuleOptions.html": {
    "href": "api/CG.Blazor.Options.ModuleOptions.html",
    "title": "Class ModuleOptions",
    "keywords": "Class ModuleOptions This class represents configuration options for a Blazor plugin module. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase ModuleOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Options Assembly : CG.Blazor.dll Syntax public class ModuleOptions : OptionsBase, IValidatableObject Properties Assembly This property contains the name of a Blazor plugin assembly Declaration [Required] public string Assembly { get; set; } Property Value Type Description System.String EntryPoint This property contains the name of an entry point for the plugin. Declaration public string EntryPoint { get; set; } Property Value Type Description System.String Routed This property indicates that the plugin requires routing support, from Blazor, at runtime. Declaration public bool Routed { get; set; } Property Value Type Description System.Boolean Scripts This property contains an optional list of scripts, from the plugin, that should be injected into the HTML head section, at runtime. Declaration public IList<string> Scripts { get; set; } Property Value Type Description System.Collections.Generic.IList < System.String > StyleSheets This property contains an optional list of resources, from the plugin, that should be injected into the HTML head section, at runtime. Declaration public IList<string> StyleSheets { get; set; } Property Value Type Description System.Collections.Generic.IList < System.String > Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Blazor.Options.PluginOptions.html": {
    "href": "api/CG.Blazor.Options.PluginOptions.html",
    "title": "Class PluginOptions",
    "keywords": "Class PluginOptions This class represents configuration options for Blazor plugins. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase PluginOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Options Assembly : CG.Blazor.dll Syntax public class PluginOptions : OptionsBase, IValidatableObject Fields SectionKey This constant represents the corresponding configuration key for these options. Declaration public const string SectionKey = \"Plugins\" Field Value Type Description System.String Properties Modules This property contains a list of plugin modules. Declaration [Required] public IList<ModuleOptions> Modules { get; set; } Property Value Type Description System.Collections.Generic.IList < ModuleOptions > Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Blazor.Plugins.html": {
    "href": "api/CG.Blazor.Plugins.html",
    "title": "Namespace CG.Blazor.Plugins",
    "keywords": "Namespace CG.Blazor.Plugins Classes ModuleBase This class is a base implementation of the IModule interface."
  },
  "api/CG.Blazor.Plugins.ModuleBase.html": {
    "href": "api/CG.Blazor.Plugins.ModuleBase.html",
    "title": "Class ModuleBase",
    "keywords": "Class ModuleBase This class is a base implementation of the IModule interface. Inheritance System.Object ModuleBase Implements IModule Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Plugins Assembly : CG.Blazor.dll Syntax public abstract class ModuleBase : IModule Methods Initialize(IServiceCollection) This method is called by the framework when the module is first loaded, to initialize the plugin. Declaration public abstract void Initialize(IServiceCollection serviceCollection) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Implements IModule"
  },
  "api/CG.Blazor.ViewModels.html": {
    "href": "api/CG.Blazor.ViewModels.html",
    "title": "Namespace CG.Blazor.ViewModels",
    "keywords": "Namespace CG.Blazor.ViewModels Classes ViewModelBase This class is a base implementation of the IViewModel interface. Interfaces IViewModel This interface represents a view-model."
  },
  "api/CG.Blazor.ViewModels.IViewModel.html": {
    "href": "api/CG.Blazor.ViewModels.IViewModel.html",
    "title": "Interface IViewModel",
    "keywords": "Interface IViewModel This interface represents a view-model. Inherited Members System.ComponentModel.INotifyPropertyChanged.PropertyChanged Namespace : CG.Blazor.ViewModels Assembly : CG.Blazor.dll Syntax public interface IViewModel : INotifyPropertyChanged"
  },
  "api/CG.Blazor.ViewModels.ViewModelBase.html": {
    "href": "api/CG.Blazor.ViewModels.ViewModelBase.html",
    "title": "Class ViewModelBase",
    "keywords": "Class ViewModelBase This class is a base implementation of the IViewModel interface. Inheritance System.Object ViewModelBase Implements IViewModel System.ComponentModel.INotifyPropertyChanged Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.ViewModels Assembly : CG.Blazor.dll Syntax public abstract class ViewModelBase : IViewModel, INotifyPropertyChanged Methods OnPropertyChanged(String) This method raises the PropertyChanged event. Declaration protected virtual void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName The name of the property. SetValue<T>(ref T, T, String) This method sets the value of the specified property's backing field, then calls OnPropertyChanged(String) on behalf of the property. Declaration protected void SetValue<T>(ref T backingField, T value, string propertyName = null) Parameters Type Name Description T backingField The backing field associated with the property. T value The value to set in the property. System.String propertyName The name of the property. Type Parameters Name Description T The type of the property. Events PropertyChanged This event is raised whenever a property value changes on the view-model. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements IViewModel System.ComponentModel.INotifyPropertyChanged"
  },
  "api/CG.Blazor.Views.html": {
    "href": "api/CG.Blazor.Views.html",
    "title": "Namespace CG.Blazor.Views",
    "keywords": "Namespace CG.Blazor.Views Classes ViewBase<T> This class is a base implementation of a Blazor view."
  },
  "api/CG.Blazor.Views.ViewBase-1.html": {
    "href": "api/CG.Blazor.Views.ViewBase-1.html",
    "title": "Class ViewBase<T>",
    "keywords": "Class ViewBase<T> This class is a base implementation of a Blazor view. Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase ViewBase<T> Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleAfterRender Microsoft.AspNetCore.Components.IHandleEvent System.IDisposable Inherited Members Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem, System.Object) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Views Assembly : CG.Blazor.dll Syntax public abstract class ViewBase<T> : ComponentBase, IComponent, IHandleAfterRender, IHandleEvent, IDisposable where T : class, IViewModel Type Parameters Name Description T The type of associated view-model. Remarks The idea, with this class, is to create a simple MVVM integration for use with Blazor. As we all know, Blazor was deliberately designed not favor any one paradigm over another, so, if we want to use MVVM with Blazor, which we do, then we're on our own for that part. That's fine though because, the only parts that are really missing are property change notifications, and we'll handle those here. Examples All that's required to use this class is to add the following tag to your razor page markup: @inherits ViewBase Where IMyViewModel Properties ViewModel This property contains an associated view-model. Declaration [Inject] protected T ViewModel { get; set; } Property Value Type Description T Methods Dispose() This method performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() OnInitializedAsync() This method is invoked when the component is ready to start. Declaration protected override Task OnInitializedAsync() Returns Type Description System.Threading.Tasks.Task A task to perform the operation. Overrides Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleAfterRender Microsoft.AspNetCore.Components.IHandleEvent System.IDisposable"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection"
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Blazor.dll Syntax public static class ServiceCollectionExtensions Methods AddPlugins(IServiceCollection, IConfiguration) This method adds any configured plugins to the specified service collection. It also registers any resources from the plugins, with Blazor. It also makes the Blazor router aware of any components or pages that require runtime routing support. Declaration public static IServiceCollection AddPlugins(this IServiceCollection serviceCollection, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Remarks The idea, with this method, is to borrow a concept from Microsoft's PRISM library and dynamically load assemblies that contain pages, components, classes, etc. The end result, hopefully, is a more modular experience than is possible with vanilla Blazor. AddViewModels(IServiceCollection, String, String) Declaration public static IServiceCollection AddViewModels(this IServiceCollection serviceCollection, string assemblyWhiteList = \"\", string assemblyBlackList = \"Microsoft.*,System.*,netstandard\") Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection System.String assemblyWhiteList System.String assemblyBlackList Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Blazor.dll contains Blazor extensions used by other CodeGator packages."
  }
}